<%
req.req.headers_out['Cache-Control'] = 'no-cache'

from meresco.harvester.timeslot import Timeslot

repositoryId = args.identifier
domainId = args.domainId
if not session.get('isAdmin','') and session.get('domain', '') != domainId:
  raise Exception('Illegal use')
#
domain = req.proxy.getDomain(domainId)

def targetTuple(targetId):
  return req.proxy.getTarget(targetId).get('name', ''), targetId

def mappingTuple(mappingId):
  return req.proxy.getMapping(mappingId).get('name', ''), mappingId

targets = [targetTuple(targetId) for targetId in domain.get('targetIds', [])]
mappings = [mappingTuple(mappingId) for mappingId in domain.get('mappingIds', [])]

%>

<script language="javascript">

function submitForm(submitName) {
	var submitButton = document.getElementById(submitName);
	submitButton.click()
}

</script>

<%
repository = req.proxy.getRepository(identifier=repositoryId, domainId=domainId)
groupId = repository['repositoryGroupId']
%>
<h1>Repository Administration</h1>
<%=args.error and '<span class="error">' + args.error + '</span>'or ''%>
<div><h3>Repository: <%=repositoryId%></h3>
<form method="post" name="repositorySave" action="/actions/updateRepository">
    <input type="hidden" name="redirectUri" value="/page/repository.edit/?domainId=<%=domainId%>"/>
    <input type="hidden" name="identifier" value="<%=repositoryId%>"/>
    <input type="hidden" name="domainId" value="<%=domainId%>"/>
    <input type="hidden" name="repositoryGroupId" value="<%=repository['repositoryGroupId']%>">
    <table cellspacing="0" cellpadding="0">
      <tr><td>Id:</td>
          <td><%=repositoryId%></td></tr>
      <tr><td>Baseurl:</td><td><input size="50" type="text" name="baseurl" value="<%=repository.get('baseurl') or ''%>"></td></tr>
      <tr><td>Set:</td><td><input size="50" type="text" name="set" value="<%=repository.get('set') or ''%>"></td></tr>
      <tr><td>Metadata Prefix:</td><td><input size="50" type="text" name="metadataPrefix" value="<%=repository.get('metadataPrefix', '')%>"></td></tr>

      <tr>
        <td>Mapping:</td>
        <td>
          <select name="mappingId">
<%
mappingId = repository.get('mappingId') or ''
for name,id in [('', '')] + mappings:
%>
          <option value="<%=id%>" <%='selected' if mappingId == id else ''%>><%escape_html(name)%></option>
<%
# end mappings
%>
          </select>
        </td>
      </tr>

      <tr>
        <td>Target:</td>
        <td>
          <select name="targetId">
<%
targetId = repository.get('targetId') or ''
for name,id in [('', '')] + targets:
%>
          <option value="<%=id%>" <%='selected' if targetId == id else ''%>><%escape_html(name)%></option>
<%
# end targets
%>
          </select>
        </td>
      </tr>

      <tr><td>Target Collection:</td><td><input size="50" type="text" name="collection" value="<%=repository.get('collection') or ''%>"></td></tr>
      <tr><td>Max. validation errors:</td><td><input size="50" type="text" name="maximumIgnore" value="<%=repository.get('maximumIgnore') or '0'%>"></td></tr>


		<tr>
        <td>Harvest:</td>
        <td><input type="checkbox" name="use" value="true" <%='checked' if repository.get('use') else ''%>></td>
      </tr>
      <tr>
        <td>Minimum continuous interval (in seconds):</td>
        <td><input type="text" name="continuous" value="<%=repository.get('continuous', '') or ''%>"></td>
      </tr>
      <tr>
        <td>User-Agent:</td>
        <td><input type="text" name="userAgent" value="<%=repository.get('userAgent', '') or ''%>"></td>
      </tr>
      <tr>
        <td>Complete in one attempt:</td>
        <td><input type="checkbox" name="complete" value="true" <%='checked' if repository.get('complete') else ''%>>Tells the harvester to complete harvesting in one attempt. Generally this option should not be required. Only for repositories with shortlived resumptionTokens.</td>
      </tr>
      <tr>
        <td>Next action:</td>
        <td>
          <select name="repositoryAction">
<%
repoAction = repository.get('action')
%>
            <option value="" <%= repoAction == '' and 'selected' or ''%>>-</option>
            <option value="clear" <%= repoAction == 'clear' and 'selected' or ''%>>Clear</option>
            <option value="refresh" <%= repoAction == 'refresh' and 'selected' or ''%>>Refresh</option>
          </select>
        </td>
      </tr>
</table>
  <p>
   <input type="submit" name="action" class="butt" value="Save" accesskey="s">
  </p>


<%

def renderDropdown(index, selectName, aTupleList, selectedValue, wildcardName=''):
	#
%>
	<select name="<%= selectName %>_<%= index %>">
<%
	#
	if wildcardName != '':
		#
%>
	    <option value="*" <%=selectedValue=='*' and 'selected' or ''%>><%= wildcardName %></option>
<%
	#

 	for key,value in aTupleList:
		#
%>
			<option value="<%=key%>" <%=selectedValue==key and 'selected' or ''%>><%=value%></option>
<%
	#
%>
			</select>
<%
#

def renderTimeslot(index, aTimeslot):
	#
	weeks = map(lambda x:(str(x),x), range(1,54))
	hours = map(lambda x:(str(x),x), range(25))
	weekdays = [('0','Monday'),('1','Tuesday'),('2','Wednesday'),('3','Thursday'),('4','Friday'),('5','Saturday'),('6','Sunday')]

	req.write('<td>')
	renderDropdown(index, 'shopclosedWeek', weeks, aTimeslot.beginweek, 'Any week')
	req.write('</td><td>')
	renderDropdown(index, 'shopclosedWeekDay', weekdays, aTimeslot.beginday, 'Any day')
	req.write('</td><td>')
	req.write('from')
	renderDropdown(index, 'shopclosedBegin', hours, aTimeslot.beginhour)
	req.write(':00 hrs ')
	req.write('</td><td>')
	req.write(' until')
	renderDropdown(index, 'shopclosedEnd', hours, aTimeslot.endhour)
	req.write(':00 hrs')
	req.write('</td>')
	if index != 0:
		req.write("""
		<td align="right">
			<input type="image" src="/images/delete.jpg" name="deleteTimeslot_%(index)s" id="deleteTimeslot_%(index)s">
			<a href="javascript:submitForm('deleteTimeslot_%(index)s')">delete</a>
		</td>""" % locals())
		if not aTimeslot.valid():
			req.write('<td><p class="error">Invalid timeslot specification, will be ignored.</p></td>')
#
%>

<div><h3>Closing hours</h3>
<table cellpadding="0" cellspacing="0">

<%
req.write('<tr>')
for i in ['Week', 'Day', 'Begin', 'End', '']:
  req.write('<th>%s</th>' % i)
req.write('</tr>')
index = 0
for shopclosed in repository.get('shopclosed', []):
	index = index + 1
	closed=Timeslot(shopclosed)
	#
%>
	<tr>
		<% renderTimeslot(index,closed)%>
	</tr>
<%
#

%>

<input type="hidden" name="numberOfTimeslots" value="<%= index %>">
	<tr>
		<% renderTimeslot(0, Timeslot('*:*:0:0-*:*:0:0'))%>
		<td><input type="submit" class="butt" value="Add" accesskey="a" name="addTimeslot"></td>
	</tr>
</table>
</form>
</div>



<div><h3>Status</h3>
  <ul>
   <li>
    <a href="/page/showHarvesterStatus/show?domainId=<%= domainId %>&amp;repositoryId=<%= repositoryId %>">
   Harvester status of this repository
    </a>
   </li>
	 <li>
    <a href="/page/showHarvesterThroughput/show?domainId=<%= domainId %>&amp;repositoryId=<%= repositoryId %>&amp;since=lastweek">
   Harvester throughput for this repository for the past 7 days.
    </a>
   </li>
	 <li>
    <a href="/page/showHarvesterThroughput/show?domainId=<%= domainId %>&amp;repositoryId=<%= repositoryId %>&amp;since=lastmonth">
   Harvester throughput for this repository for the past 31 days.
    </a>
   </li>
  </ul>
</div>


<div><h3>Useful links</h3>
  <ul>
   <li>
	 <a target="_blank" href="<%=repository.get('baseurl')%>?verb=ListMetadataFormats">
     List all metadata formats.
    </a>
   </li>
	<li>
    <a href="/testrepository/?domainId=<%=domainId%>&amp;repositoryId=<%=repositoryId%>">
     Test mapping
    </a>
   </li>
  </ul>
  <i>(You may need to save first.)</i>
</div>
<p>
<a href="/page/repositoryGroup.edit/?domainId=<%=domainId%>&amp;identifier=<%=groupId%>">Back to repositorygroup</a>
</p>
