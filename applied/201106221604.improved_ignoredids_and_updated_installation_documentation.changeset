Changeset created on Wed Jun 22 16:04:11 CEST 2011 by Seek You Too

Description: Refactored ignoredIds, update installation documentation

    When 'clearing' a repository the ignored records are now properly
    deleted as well.

    Removed old invalid documentation. Updated installation documentation

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-harvester/tags/version_7.0.3

diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/bin/meresco-harvester version_7.1/bin/meresco-harvester
--- version_7.0.3/bin/meresco-harvester	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/bin/meresco-harvester	2011-06-22 16:03:30.000000000 +0200
@@ -0,0 +1,53 @@
+#!/usr/bin/env python2.5
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+# This script should be run by a user with write access to the logDir and stateDir
+# specified in the apache configuration
+
+from os.path import abspath, dirname                #DO_NOT_DISTRIBUTE
+from os import system, getcwd                       #DO_NOT_DISTRIBUTE
+from glob import glob                               #DO_NOT_DISTRIBUTE
+from sys import path as systemPath, exit            #DO_NOT_DISTRIBUTE
+if getcwd() != dirname(abspath(__file__)):          #DO_NOT_DISTRIBUTE
+    print 'Run from directory:',                    #DO_NOT_DISTRIBUTE
+    print dirname(abspath(__file__))                #DO_NOT_DISTRIBUTE
+    exit(1)                                         #DO_NOT_DISTRIBUTE
+system('find .. -name "*.pyc" | xargs rm -f')       #DO_NOT_DISTRIBUTE
+for path in glob('../deps.d/*'):                    #DO_NOT_DISTRIBUTE
+    systemPath.insert(0, path)                      #DO_NOT_DISTRIBUTE
+systemPath.insert(0, '..')                          #DO_NOT_DISTRIBUTE
+
+from meresco.harvester.startharvester import StartHarvester
+StartHarvester().start()
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/bin/meresco-harvester-internal-server version_7.1/bin/meresco-harvester-internal-server
--- version_7.0.3/bin/meresco-harvester-internal-server	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/bin/meresco-harvester-internal-server	2011-06-22 16:03:30.000000000 +0200
@@ -0,0 +1,59 @@
+#!/usr/bin/env python2.5
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from os.path import abspath, dirname                #DO_NOT_DISTRIBUTE
+from os import system, getcwd                       #DO_NOT_DISTRIBUTE
+from glob import glob                               #DO_NOT_DISTRIBUTE
+from sys import path as systemPath, exit            #DO_NOT_DISTRIBUTE
+if getcwd() != dirname(abspath(__file__)):          #DO_NOT_DISTRIBUTE
+    print 'Run from directory:',                    #DO_NOT_DISTRIBUTE
+    print dirname(abspath(__file__))                #DO_NOT_DISTRIBUTE
+    exit(1)                                         #DO_NOT_DISTRIBUTE
+system('find .. -name "*.pyc" | xargs rm -f')       #DO_NOT_DISTRIBUTE
+for path in glob('../deps.d/*'):                    #DO_NOT_DISTRIBUTE
+    systemPath.insert(0, path)                      #DO_NOT_DISTRIBUTE
+systemPath.insert(0, '..')                          #DO_NOT_DISTRIBUTE
+
+from sys import argv, exit
+
+if __name__ == '__main__':
+    if len(argv[1:]) != 1:
+        print 'Usage: %s harvester.config' % argv[0]
+        exit(123)
+    configFile = argv[1]
+
+    from meresco.harvester.server import startServer
+    startServer(configFile)
+
Only in version_7.0.3/bin: start-harvester-internal-server
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/deps.txt version_7.1/deps.txt
--- version_7.0.3/deps.txt	2011-06-22 15:21:06.000000000 +0200
+++ version_7.1/deps.txt	2011-06-22 16:03:31.000000000 +0200
@@ -6,5 +6,7 @@
 python-meresco-components (<<3.5)
 python-meresco-core (>= 3.1)
 python-meresco-core (<< 3.2)
-python-slowfoot (>=7.3.3)
+python-slowfoot (>=7.3.2)
 python-slowfoot (<<7.4)
+python-escaping (>=0.1)
+python-escaping (<<0.2)
Only in version_7.0.3/doc: harvester.config
Only in version_7.0.3/doc: Install-Meresco-Harvester.txt
Only in version_7.0.3/doc: sahara-deployment.odt
Only in version_7.0.3/doc: SaharaManual.odt
Only in version_7.0.3/doc: sahara-summary.odt
Only in version_7.0.3/doc: wish_and_feature_list.odt
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/examples/harvester.config version_7.1/examples/harvester.config
--- version_7.0.3/examples/harvester.config	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/examples/harvester.config	2011-06-22 16:03:31.000000000 +0200
@@ -0,0 +1,23 @@
+#
+# Configuration file for Meresco Harvester
+#
+portNumber = 8888
+
+#
+# Url to the apache (slowfoot) part of Meresco Harvester
+#
+saharaUrl = http://localhost:9080
+
+#
+# dataPath stores all repositories, domain, etc information.
+#
+dataPath = /home/harvester/data
+
+#
+# logPath will contain logging information which may be rotated
+#
+logPath = /home/harvester/log
+#
+# statePath will contain the current state for harvested
+#
+statePath = /home/harvester/state
Only in version_7.0.3/examples: startharvester.py
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/action.py version_7.1/meresco/harvester/action.py
--- version_7.0.3/meresco/harvester/action.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/action.py	2011-06-22 16:03:31.000000000 +0200
@@ -33,7 +33,7 @@
 
 from harvesterlog import HarvesterLog
 from harvester import Harvester, HARVESTED, NOTHING_TO_DO
-from oairequest import OaiRequest
+from eventlogger import CompositeLogger, EventLogger
 from state import State
 from deleteids import DeleteIds, readIds, writeIds
 from os.path import isfile, join
@@ -42,26 +42,73 @@
 
 DONE = 'Done.'
 
+class ActionException(Exception):
+    pass
+
 class Action(object):
     def __init__(self, repository, stateDir, logDir, generalHarvestLog):
         self._repository = repository
         self._stateDir = stateDir
         self._logDir = logDir
         self._generalHarvestLog = generalHarvestLog
+
+    @staticmethod
+    def create(repository, stateDir, logDir, generalHarvestLog):
+        actionUse2Class = {
+            'clear': lambda use: DeleteIdsAction,
+            'refresh': lambda use: SmoothAction,
+            '': lambda use: {'true': HarvestAction, '': NoneAction}[use]
+        }
+        try:
+            actionClass = actionUse2Class[repository.action](repository.use)
+            return actionClass(repository, stateDir=stateDir, logDir=logDir, generalHarvestLog=generalHarvestLog)
+        except KeyError:
+            raise ActionException("Action '%s' not supported."%repository.action)
+
     def do(self):
         """
         perform action and return
         (if the action is finished/done, a Message about what happened.)
         """
         raise NotImplementedError
+
     def info(self):
         return  str(self.__class__.__name__)
+
     def _createHarvester(self):
-        harvesterLog=HarvesterLog(self._stateDir, self._logDir, self._repository.id)
+        harvesterLog = HarvesterLog(self._stateDir, self._logDir, self._repository.id)
+        eventlogger = CompositeLogger([
+            (['*'], harvesterLog.eventLogger()),
+            (['ERROR', 'INFO', 'WARN'], self._generalHarvestLog)
+        ])
+        uploader = self._repository.createUploader(eventlogger)
+        mapping = self._repository.mapping()
+        oairequest = self._repository.oairequest()
         helix = \
-            (Harvester(self._repository, self._stateDir, self._logDir, eventLogger=harvesterLog.eventLogger(), generalHarvestLog=self._generalHarvestLog),
-                (OaiRequest(self._repository.baseurl),),
-                (harvesterLog,)
+            (Harvester(self._repository),
+                (oairequest,),
+                (harvesterLog,),
+                (eventlogger,),
+                (uploader,),
+                (mapping,
+                    (eventlogger,)
+                ),
+            )
+        return be(helix)
+
+    def _createDeleteIds(self):
+        harvesterLog = HarvesterLog(self._stateDir, self._logDir, self._repository.id)
+        eventlogger = CompositeLogger([
+            (['*'], EventLogger(join(self._logDir, 'deleteids.log'))),
+            (['*'], harvesterLog.eventLogger()),
+            (['ERROR', 'INFO', 'WARN'], self._generalHarvestLog),
+        ])
+        uploader = self._repository.createUploader(eventlogger)
+        helix =\
+            (DeleteIds(self._repository, self._stateDir),
+                (harvesterLog,),
+                (eventlogger,),
+                (uploader,),
             )
         return be(helix)
 
@@ -93,14 +140,19 @@
         if self._repository.shopClosed():
             return False, 'Not deleting outside timeslots.', False
 
-        d = DeleteIds(self._repository, self._stateDir, self._logDir, generalHarvestLog=self._generalHarvestLog)
-        d.delete()
+        self.filename = join(self._stateDir, self._repository.id + '.ids')
+        self.ignoreFilename = join(self._stateDir, self._repository.id + '_ignored.ids')
+
+        d = self._createDeleteIds()
+        d.deleteFile(self.filename)
+        d.deleteFile(self.ignoreFilename)
         return True, 'Deleted', False
 
 class SmoothAction(Action):
     def __init__(self, repository, stateDir, logDir, generalHarvestLog):
         Action.__init__(self, repository, stateDir, logDir, generalHarvestLog)
         self.filename = join(self._stateDir, self._repository.id + '.ids')
+        self.ignoreFilename = join(self._stateDir, self._repository.id + '_ignored.ids')
         self.oldfilename = self.filename + ".old"
 
     def do(self):
@@ -125,10 +177,10 @@
 
     def _smoothinit(self):
         if isfile(self.filename):
-            rename(self.filename, self.oldfilename)
+            writeIds(self.oldfilename, set(readIds(self.filename) + readIds(self.ignoreFilename)))
+            writeIds(self.filename, set())
         else:
             open(self.oldfilename, 'w').close()
-        open(self.filename, 'w').close()
         logger = HarvesterLog(self._stateDir, self._logDir, self._repository.id)
         try:
             logger.markDeleted()
@@ -139,32 +191,17 @@
     def _finish(self):
         deletefilename = self.filename + '.delete'
         if not isfile(deletefilename):
-            writeIds(deletefilename, readIds(self.oldfilename) - readIds(self.filename))
+            writeIds(deletefilename, set(readIds(self.oldfilename)) - set(readIds(self.filename)))
         self._delete(deletefilename)
         remove(self.oldfilename)
         remove(deletefilename)
         return DONE
 
     def _delete(self, filename):
-        d = DeleteIds(self._repository, self._stateDir, self._logDir, generalHarvestLog=self._generalHarvestLog)
+        d = self._createDeleteIds()
         d.deleteFile(filename)
 
     def _harvest(self):
         harvester = self._createHarvester()
         return harvester.harvest()
 
-class ActionFactoryException(Exception):
-    pass
-
-class ActionFactory(object):
-    def createAction(self, repository, stateDir, logDir, generalHarvestLog):
-        if repository.action == 'clear':
-            return DeleteIdsAction(repository, stateDir=stateDir, logDir=logDir, generalHarvestLog=generalHarvestLog)
-        if repository.action == 'refresh':
-            return SmoothAction(repository, stateDir=stateDir, logDir=logDir, generalHarvestLog=generalHarvestLog)
-        if repository.use == 'true' and repository.action == '':
-            return HarvestAction(repository, stateDir=stateDir, logDir=logDir, generalHarvestLog=generalHarvestLog)
-        if repository.use == "" and repository.action == '':
-            return NoneAction(repository, stateDir=stateDir, logDir=logDir, generalHarvestLog=generalHarvestLog)
-        raise ActionFactoryException("Action '%s' not supported."%repository.action)
-
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/compositeuploader.py version_7.1/meresco/harvester/compositeuploader.py
--- version_7.0.3/meresco/harvester/compositeuploader.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/compositeuploader.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 #
 # Copyright (C) 2005 Seek You Too B.V. http://www.cq2.nl
 #
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/controlpanel/disallowfileplugin.py version_7.1/meresco/harvester/controlpanel/disallowfileplugin.py
--- version_7.0.3/meresco/harvester/controlpanel/disallowfileplugin.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/controlpanel/disallowfileplugin.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from string import strip
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/controlpanel/html/dynamic/getStatus.sf version_7.1/meresco/harvester/controlpanel/html/dynamic/getStatus.sf
--- version_7.0.3/meresco/harvester/controlpanel/html/dynamic/getStatus.sf	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/controlpanel/html/dynamic/getStatus.sf	2011-06-22 16:03:31.000000000 +0200
@@ -1,3 +1,32 @@
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
 
 def main(arguments, **kwargs):
     domainId = arguments.get('domainId', [None])[0]
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/controlpanel/html/dynamic/ignoredRecord.sf version_7.1/meresco/harvester/controlpanel/html/dynamic/ignoredRecord.sf
--- version_7.0.3/meresco/harvester/controlpanel/html/dynamic/ignoredRecord.sf	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/controlpanel/html/dynamic/ignoredRecord.sf	2011-06-22 16:03:31.000000000 +0200
@@ -1,3 +1,33 @@
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
 def main(arguments, **kwargs):
     domainId = arguments.get('domainId', [None])[0]
     repositoryId = arguments.get('repositoryId', [None])[0]
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/controlpanel/html/dynamic/ignored.sf version_7.1/meresco/harvester/controlpanel/html/dynamic/ignored.sf
--- version_7.0.3/meresco/harvester/controlpanel/html/dynamic/ignored.sf	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/controlpanel/html/dynamic/ignored.sf	2011-06-22 16:03:31.000000000 +0200
@@ -1,3 +1,33 @@
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
 def main(arguments, **kwargs):
     domainId = arguments.get('domainId', [None])[0]
     repositoryId = arguments.get('repositoryId', [None])[0]
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/controlpanel/merescoharvesterhandler.py version_7.1/meresco/harvester/controlpanel/merescoharvesterhandler.py
--- version_7.0.3/meresco/harvester/controlpanel/merescoharvesterhandler.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/controlpanel/merescoharvesterhandler.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from slowfoot.slowfoothandler import Request, handlepsp, util, _psp_login, retrieveSession, apache
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/controlpanel/slowfoottemplates/onlinemapping version_7.1/meresco/harvester/controlpanel/slowfoottemplates/onlinemapping
--- version_7.0.3/meresco/harvester/controlpanel/slowfoottemplates/onlinemapping	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/controlpanel/slowfoottemplates/onlinemapping	2011-06-22 16:03:31.000000000 +0200
@@ -10,15 +10,8 @@
 
 Gebruikte mapping:
 <%
-harvest = OnlineHarvest(req)
+harvest = OnlineHarvest(req, saharaUrl=get_options()['localhostUrl'])
 
-mappingXml = asxml(url('/' + args.mapping)).mapping
-mapping = Mapping(mappingXml.id)
-mapping.code = str(mappingXml.code)
-mapping.name = mappingXml.name
-%><%=mapping.name%>
-
-<%
 xmlurl = str(f.inputurl)
-harvest.performMapping(mapping,xmlurl)
+harvest.performMapping(mappingId=args.mapping, urlString=xmlurl)
 %>
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/controlpanel/tools.py version_7.1/meresco/harvester/controlpanel/tools.py
--- version_7.0.3/meresco/harvester/controlpanel/tools.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/controlpanel/tools.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 import re
 AMARA_TYPE_XML_ELEMENT = 1
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/deleteids.py version_7.1/meresco/harvester/deleteids.py
--- version_7.0.3/meresco/harvester/deleteids.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/deleteids.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,57 +1,58 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl 
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from virtualuploader import UploaderException
-from eventlogger import NilEventLogger, EventLogger
-from harvesterlog import idfilename, HarvesterLog
-from eventlogger import CompositeLogger, NilEventLogger
+from harvesterlog import idfilename
 from string import strip
 from slowfoot import binderytools
 from slowfoot import wrappers
 import sys, os
-from sets import Set
 from mapping import Upload
 from traceback import format_exception
 
+from meresco.core import Observable
+
 def readIds(filename):
-    ids = Set()
-    f = open(filename)
-    try:
-        for id in filter(None, map(strip,f)):
-            ids.add(id)
-        return ids
-    finally:
-        f.close()
+    ids = []
+    uniqueIds = set()
+    for id in (id.strip() for id in open(filename)):
+        if id  in uniqueIds:
+            continue
+        ids.append(id)
+        uniqueIds.add(id)
+    return ids
 
 def writeIds(filename, ids):
     f = open(filename,'w')
@@ -63,17 +64,11 @@
         f.close()
 
 
-class DeleteIds(object):
-    def __init__(self, repository, stateDir, logDir, generalHarvestLog=NilEventLogger()):
+class DeleteIds(Observable):
+    def __init__(self, repository, stateDir):
+        Observable.__init__(self)
         self._stateDir = stateDir
-        self._logDir = logDir
         self._repository = repository
-        self._logger = HarvesterLog(stateDir, logDir, repository.id)
-        self._eventLogger = CompositeLogger([
-            (['*'], EventLogger(os.path.join(self._logDir, 'deleteids.log'))),
-            (['*'], self._logger.eventLogger()),
-            (['ERROR', 'INFO', 'WARN'], generalHarvestLog),
-        ])
         self._filename = idfilename(self._stateDir, self._repository.id)
         self._markLogger = True
                     
@@ -81,42 +76,41 @@
         return readIds(self._filename)
         
     def delete(self):
-        uploader = self._repository.createUploader(self._eventLogger)
-        uploader.start()
+        self.do.start()
         try:
-            self._delete(uploader)
+            self._delete()
         finally:
-            uploader.stop()
+            self.do.stop()
     
     def deleteFile(self, filename):
         self._filename = filename
         self._markLogger = False
         self.delete()
         
-    def _delete(self, uploader):
+    def _delete(self):
         ids = self.ids()
-        done = Set()
+        done = []
         try:
             for id in ids:
                 try:
                     anUpload = Upload(repository=self._repository)
                     anUpload.id = id
-                    uploader.delete(anUpload)
-                    done.add(id)
+                    self.do.notifyHarvestedRecord(anUpload.id)
+                    self.do.delete(anUpload)
+                    done.append(id)
                 except:
                     xtype,xval,xtb = sys.exc_info()
                     errorMessage = '|'.join(map(str.strip,format_exception(xtype,xval,xtb)))
-                    self._eventLogger.error(errorMessage, id=id)
+                    self.do.logError(errorMessage, id=id)
                     raise
-            return ids - done
+            return ids[len(done):]
         finally:
-            self._finish(ids - done)
+            self._finish(ids[len(done):])
             
     def _finish(self, remainingIDs):
         writeIds(self._filename, remainingIDs)
         if self._markLogger and not remainingIDs:
-            logger = HarvesterLog(self._stateDir, self._logDir, self._repository.id)
             try:
-                logger.markDeleted()
+                self.do.markDeleted()
             finally:
-                logger.close()
+                self.do.close()
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/eventlogger.py version_7.1/meresco/harvester/eventlogger.py
--- version_7.0.3/meresco/harvester/eventlogger.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/eventlogger.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009,2011 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009, 2011 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from re import compile
@@ -40,7 +42,7 @@
 
 class BasicEventLogger(object):
     def __init__(self, logfile):
-        self._logfile = self.openlogfile(logfile)
+        self._logfile = self._openlogfile(logfile)
 
     def close(self):
         if self._logfile:
@@ -83,28 +85,31 @@
     def _flush(self):
         self._logfile.flush()
 
+    def getEventLogger(self):
+        return self
+
 class EventLogger(BasicEventLogger):
     def __init__(self,logfile):
         BasicEventLogger.__init__(self, logfile)
 
-    def openlogfile(self, logfile):
+    def _openlogfile(self, logfile):
         isdir(dirname(logfile)) or makedirs(dirname(logfile))
         return open(logfile, 'a+')
 
-    def succes(self,comments='', id=''):
+    def logSuccess(self,comments='', id=''):
         self.logLine('SUCCES', comments=comments, id=id)
 
-    def failure(self,comments='', id=''):
+    def logFailure(self,comments='', id=''):
         self.logLine('FAILURE', comments=comments, id=id)
-    fail = failure
+    #fail = failure
 
-    def error(self,comments='', id=''):
+    def logError(self,comments='', id=''):
         self.logLine('ERROR', comments=comments, id=id)
 
-    def info(self, comments='', id=''):
+    def logInfo(self, comments='', id=''):
         self.logLine('INFO', comments=comments, id=id)
 
-    def warning(self, comments='', id=''):
+    def logWarning(self, comments='', id=''):
         self.logLine('WARNING', comments=comments, id=id)
 
 class StreamEventLogger(EventLogger):
@@ -112,7 +117,7 @@
         self._stream = stream
         EventLogger.__init__(self, None)
 
-    def openlogfile(self, logfile):
+    def _openlogfile(self, logfile):
         return self._stream
 
 class CompositeLogger(EventLogger):
@@ -120,7 +125,7 @@
         EventLogger.__init__(self, None)
         self._loggers = loggers
         
-    def openlogfile(self, logfile):
+    def _openlogfile(self, logfile):
         return None
 
     def logLine(self, event, comments, id=''):
@@ -132,7 +137,7 @@
         def __init__(self):
             EventLogger.__init__(self, None)
 
-        def openlogfile(self, logfile):
+        def _openlogfile(self, logfile):
             pass
 
         def logLine(self, event, comments, id=''):
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/filesystemuploader.py version_7.1/meresco/harvester/filesystemuploader.py
--- version_7.0.3/meresco/harvester/filesystemuploader.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/filesystemuploader.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,36 +1,39 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl 
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 #
 from virtualuploader import VirtualUploader, UploaderException
 import os
@@ -135,7 +138,7 @@
             finally:
                 fd.close()
 
-        self.logDelete(anUpload.id)
+        self._logDelete(anUpload.id)
     
     def info(self):
         return 'Writing records to path:%s' % (self._target.path)
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/harvesterlog.py version_7.1/meresco/harvester/harvesterlog.py
--- version_7.0.3/meresco/harvester/harvesterlog.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/harvesterlog.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 import time, os, sys, re, string
@@ -39,14 +40,17 @@
 import traceback
 from os.path import join, isdir, isfile, dirname
 from os import makedirs, remove
+from shutil import rmtree
 from state import State
+from escaping import escapeFilename
+
 
 def idfilename(stateDir, repositorykey):
     return join(stateDir, repositorykey+'.ids')
 
 def ignoreFilepath(logDir, uploadid):
     repositoryId, recordId = uploadid.split(":", 1)
-    return join(logDir, "ignored", repositoryId, recordId)
+    return join(logDir, "ignored", repositoryId, escapeFilename(recordId))
 
 def ensureDirectory(directoryPath):
     isdir(directoryPath) or makedirs(directoryPath)
@@ -84,23 +88,24 @@
         return len(self._ignoredIds)
 
     def eventLogger(self):
+        # Should be removed, but is still used in Harvester.
         return self._eventlogger
             
     def markDeleted(self):
         self._ids.clear()
         self._state.markDeleted()
-        self._eventlogger.succes('Harvested/Uploaded/Deleted/Total: 0/0/0/0, Done: Deleted all id\'s.',id=self._name)
+        self._eventlogger.logSuccess('Harvested/Uploaded/Deleted/Total: 0/0/0/0, Done: Deleted all id\'s.',id=self._name)
     
     def endRepository(self, token):
         self._state._write(self.countsSummary())
         self._state._write(', Done: %s, ResumptionToken: %s' % (self._state.getTime(), token))
-        self._eventlogger.succes('Harvested/Uploaded/Deleted/Total: %s, ResumptionToken: %s' % (self.countsSummary(), token), id=self._name)
+        self._eventlogger.logSuccess('Harvested/Uploaded/Deleted/Total: %s, ResumptionToken: %s' % (self.countsSummary(), token), id=self._name)
 
     def endWithException(self):
         error = str(sys.exc_type) + ': ' + str(sys.exc_value)
         xtype,xval,xtb = sys.exc_info()
         error2 = '|'.join(map(str.strip,traceback.format_exception(xtype,xval,xtb)))
-        self._eventlogger.error(error2, id=self._name)
+        self._eventlogger.logError(error2, id=self._name)
         self._state._write(self.countsSummary())
         self._state._write( ', Error: ' + error)
 
@@ -114,26 +119,30 @@
         self._state.close()
 
     def notifyHarvestedRecord(self, uploadid):
-        self._ignoredIds.remove(uploadid)
-        ignoreFile = ignoreFilepath(self._logDir, uploadid)
-        if isfile(ignoreFile):
-            remove(ignoreFile)
+        self._removeFromIgnored(uploadid)
         self._harvestedCount += 1
 
-    def logID(self, uploadid):
+    def uploadIdentifier(self, uploadid):
         self._ids.add(uploadid)
         self._uploadedCount += 1
         
-    def logDeletedID(self, uploadid):
+    def deleteIdentifier(self, uploadid):
         self._ids.remove(uploadid)
         self._deletedCount += 1
 
-    def logIgnoredID(self, uploadid, message):
+    def ignoreIdentifier(self, uploadid, message):
         ignoreFile = ignoreFilepath(self._logDir, uploadid)
         ensureDirectory(dirname(ignoreFile))
         open(ignoreFile, 'w').write(message)
         self._ignoredIds.add(uploadid)
-        self._eventlogger.warning('IGNORED', uploadid)
+        self._eventlogger.logWarning('IGNORED', uploadid)
+
+    def clearIgnored(self, repositoryId):
+        repositoryIgnoredIds = [id for id in self._ignoredIds 
+                                if id.startswith("%s:" % repositoryId)]
+        for id in repositoryIgnoredIds:
+            self._ignoredIds.remove(id)
+        rmtree(join(self._logDir, "ignored", repositoryId))
 
     def hasWork(self):
         return not self.isCurrentDay(self.from_) or self.token
@@ -143,3 +152,10 @@
 
     def ignoredIds(self):
         return [id for id in self._ignoredIds]
+
+    def _removeFromIgnored(self, uploadid):
+        self._ignoredIds.remove(uploadid)
+        ignoreFile = ignoreFilepath(self._logDir, uploadid)
+        if isfile(ignoreFile):
+            remove(ignoreFile)
+
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/harvester.py version_7.1/meresco/harvester/harvester.py
--- version_7.0.3/meresco/harvester/harvester.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/harvester.py	2011-06-22 16:03:31.000000000 +0200
@@ -33,7 +33,6 @@
 
 import os, sys, shelve, time, traceback,re
 from harvesterlog import HarvesterLog
-from eventlogger import CompositeLogger, NilEventLogger
 import getopt, threading
 from urllib2 import urlopen
 from urllib import urlencode
@@ -46,22 +45,16 @@
 HARVESTED = 'Harvested.'
 
 class Harvester(Observable):
-    def __init__(self, repository, stateDir, logDir, eventLogger, generalHarvestLog=NilEventLogger()):
+    def __init__(self, repository):
         Observable.__init__(self)
         self._repository = repository
-        self._eventlogger = CompositeLogger([
-            (['*'], eventLogger),
-            (['ERROR', 'INFO', 'WARN'], generalHarvestLog)
-        ])
-        self._uploader = repository.createUploader(self._eventlogger)
-        self._mapper = repository.mapping()
         self._MAXTIME= 30*60 # 30 minutes
 
     def getRecord(self, id):
         return self.any.getRecord(metadataPrefix=self._repository.metadataPrefix, identifier=id)
 
     def uploaderInfo(self):
-        return self._uploader.info()
+        return self.any.info()
 
     def listRecords(self, from_, token, set):
         if token:
@@ -82,20 +75,20 @@
         return newtoken
 
     def uploadRecord(self, record):
-        upload = self._mapper.createUpload(self._repository, record, logger=self._eventlogger)
+        upload = self.any.createUpload(self._repository, record)
         self.do.notifyHarvestedRecord(upload.id)
         if record.header.status == "deleted":
-            self._uploader.delete(upload)
-            self.do.logDeletedID(upload.id)
+            self.do.delete(upload)
+            self.do.deleteIdentifier(upload.id)
         elif not upload.skip:
             try:
-                self._uploader.send(upload)
-                self.do.logID(upload.id)
+                self.do.send(upload)
+                self.do.uploadIdentifier(upload.id)
             except InvalidDataException, e:
                 maxIgnore = self._repository.maxIgnore()
                 if self.any.totalIgnoredIds() >= maxIgnore:
                     raise TooMuchInvalidDataException(upload.id, maxIgnore)
-                self.do.logIgnoredID(upload.id, e.originalMessage)
+                self.do.ignoreIdentifier(upload.id, e.originalMessage)
 
     def _harvestLoop(self):
         try:
@@ -110,16 +103,16 @@
 
     def _harvest(self):
         try:
-            self._eventlogger.logLine('STARTHARVEST', '',id=self._repository.id)
-            self._eventlogger.info(self.uploaderInfo(), id=self._repository.id)
-            self._eventlogger.info("Mappingname '%s'"%self._mapper.name, id=self._repository.id)
-            self._uploader.start()
+            self.do.logLine('STARTHARVEST', '',id=self._repository.id)
+            self.do.logInfo(self.any.uploaderInfo(), id=self._repository.id)
+            self.do.logInfo(self.any.mappingInfo(), id=self._repository.id)
+            self.do.start()
             try:
                 return self._harvestLoop()
             finally:
-                self._uploader.stop()
+                self.do.stop()
         finally:
-            self._eventlogger.logLine('ENDHARVEST','',id=self._repository.id)
+            self.do.logLine('ENDHARVEST','',id=self._repository.id)
 
     def harvest(self):
         try:
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/ids.py version_7.1/meresco/harvester/ids.py
--- version_7.0.3/meresco/harvester/ids.py	2011-04-14 17:04:10.000000000 +0200
+++ version_7.1/meresco/harvester/ids.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 #
 import sys, os
 if sys.version_info[:2] == (2,3):
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/__init__.py version_7.1/meresco/harvester/__init__.py
--- version_7.0.3/meresco/harvester/__init__.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/__init__.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009,2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl 
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from namespaces import namespaces
 from __version__ import VERSION, VERSION_STRING
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/mapping.py version_7.1/meresco/harvester/mapping.py
--- version_7.0.3/meresco/harvester/mapping.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/mapping.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,36 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl 
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from xml.sax.saxutils import escape as xmlEscape
@@ -38,6 +40,7 @@
 from urlparse import urljoin
 from urllib import urlencode
 from saharaobject import SaharaObject
+from meresco.core import Observable
 
 
 nillogger = NilEventLogger()
@@ -142,20 +145,23 @@
         if self.id:
             self.id = str(self.id)
 
-class Mapping(SaharaObject):
+class Mapping(SaharaObject, Observable):
     def __init__(self, mappingId):
         SaharaObject.__init__(self,['name', 'description', 'code'])
+        Observable.__init__(self)
         self.id = mappingId
 
+    def mappingInfo(self):
+        return "Mappingname '%s'" % self.name       
+
     def setCode(self, aString):
         self.code = aString
 
-    def createUpload(self, repository, record, logger=nillogger, doAsserts=False):
+    def createUpload(self, repository, record, doAsserts=False):
         upload = Upload(repository=repository, record=record)
         if record.header.status == 'deleted':
             return upload
 
-        logger = logger
         builtinscopy = __builtins__.copy()
         builtinscopy['__import__'] = noimport
 
@@ -170,17 +176,17 @@
                 'urljoin': urljoin,
                 'urlencode': urlencode,
                 'doAssert': assertionMethod,
-                'logger': logger,
+                'logger': self.do,
                 'skipRecord': self.skipSimple,
                 'xmlEscape': xmlEscape,
                 '__builtins__': builtinscopy
             })
             upload.ensureStrings()
         except DataMapAssertionException, ex:
-            logger.error(comments='Assertion: ' + str(ex), id=upload.id)
+            self.do.logError(comments='Assertion: ' + str(ex), id=upload.id)
             raise ex
         except DataMapSkip, e:
-            logger.logLine('SKIP', id=upload.id, comments=str(e))
+            self.do.logLine('SKIP', id=upload.id, comments=str(e))
             upload.skip = True
         return upload
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/namespaces.py version_7.1/meresco/harvester/namespaces.py
--- version_7.0.3/meresco/harvester/namespaces.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/namespaces.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,30 +1,34 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl 
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 class _namespaces(dict):
     def __getattr__(self, key):
         try:
@@ -39,6 +43,9 @@
     dc="http://purl.org/dc/elements/1.1/",
     oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/",
     oai="http://www.openarchives.org/OAI/2.0/",
+    srw='http://www.loc.gov/zing/srw/',
+    diag='http://www.loc.gov/zing/srw/diagnostic/',
+    ucp="info:lc/xmlns/update-v1",
 )
 
 xpath = namespaces.xpath
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/oairequest.py version_7.1/meresco/harvester/oairequest.py
--- version_7.0.3/meresco/harvester/oairequest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/oairequest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from slowfoot import binderytools
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/onlineharvest.py version_7.1/meresco/harvester/onlineharvest.py
--- version_7.0.3/meresco/harvester/onlineharvest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/onlineharvest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,36 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl 
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from harvester import Harvester
@@ -36,19 +38,23 @@
 from slowfoot.wrappers import wrapp
 from mapping import TestRepository,DataMapAssertionException
 from eventlogger import StreamEventLogger
+from saharaget import SaharaGet
 
 class OnlineHarvest(object):
-    def __init__(self, outputstream):
+    def __init__(self, outputstream, saharaUrl):
         self._output = outputstream
-        self.eventlogger = StreamEventLogger(self._output)
+        self._saharaGet = SaharaGet(saharaUrl)
 
-    def performMapping(self, mapping, urlString):
-        doAssertions=True
+    def performMapping(self, mappingId, urlString):
+        mapping = self._saharaGet.getMapping(mappingId)
+        mapping.addObserver(StreamEventLogger(self._output))
+        self._output.write(mapping.mappingInfo())
+        self._output.write('\n')
         xml = wrapp(binderytools.bind_uri(urlString))
         records = xml.OAI_PMH.ListRecords.record
         for record in records:
             try:
-                upload = mapping.createUpload(TestRepository, record, self.eventlogger, doAssertions)
+                upload = mapping.createUpload(TestRepository, record, doAsserts=True)
                 if record.header.status == "deleted":
                     self.writeDelete(upload)
                 else:
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/repository.py version_7.1/meresco/harvester/repository.py
--- version_7.0.3/meresco/harvester/repository.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/repository.py	2011-06-22 16:03:31.000000000 +0200
@@ -31,7 +31,7 @@
 #
 ## end license ##
 
-from oairequest import OAIError
+from oairequest import OAIError, OaiRequest
 from saharaobject import SaharaObject
 from eventlogger import NilEventLogger
 from virtualuploader import UploaderFactory
@@ -39,7 +39,7 @@
 from sys import exc_info
 from traceback import format_exception
 from time import localtime
-from action import ActionFactory
+from action import Action
 
 nillogger = NilEventLogger()
 
@@ -82,9 +82,12 @@
         if self.mockUploader:
             return self.mockUploader
         return UploaderFactory().createUploader(self.target(), logger, self.collection)
+    
+    def oairequest(self):
+        return OaiRequest(self.baseurl)
 
     def _createAction(self, stateDir, logDir, generalHarvestLog):
-        return ActionFactory().createAction(self, stateDir=stateDir, logDir=logDir, generalHarvestLog=generalHarvestLog)
+        return Action.create(self, stateDir=stateDir, logDir=logDir, generalHarvestLog=generalHarvestLog)
 
     def do(self, stateDir, logDir, generalHarvestLog=nillogger):
         try:
@@ -101,18 +104,18 @@
                 generalHarvestLog.logLine('END', message, id = self.id)
             completeHarvest = hasResumptionToken and self.complete == 'true'
             if completeHarvest:
-                generalHarvestLog.info('Repository will be completed in one attempt', id=self.id)
+                generalHarvestLog.logInfo('Repository will be completed in one attempt', id=self.id)
             return message, completeHarvest
         except OAIError, e:
             errorMessage = _errorMessage()
-            generalHarvestLog.error(errorMessage, id=self.id)
+            generalHarvestLog.logError(errorMessage, id=self.id)
             if e.errorCode() == 'badResumptionToken':
                 action.resetState()
                 return errorMessage, self.complete == 'true'
             return errorMessage, False
         except:
             errorMessage = _errorMessage()
-            generalHarvestLog.error(errorMessage, id=self.id)
+            generalHarvestLog.logError(errorMessage, id=self.id)
             return errorMessage, False
 
 def _errorMessage():
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/repositorystatus.py version_7.1/meresco/harvester/repositorystatus.py
--- version_7.0.3/meresco/harvester/repositorystatus.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/repositorystatus.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 #
 #
 import re, sys
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/saharaget.py version_7.1/meresco/harvester/saharaget.py
--- version_7.0.3/meresco/harvester/saharaget.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/saharaget.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 #
 # $Id: saharaget.py 4825 2007-04-16 13:36:24Z TJ $
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/saharaobject.py version_7.1/meresco/harvester/saharaobject.py
--- version_7.0.3/meresco/harvester/saharaobject.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/saharaobject.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 class SaharaObject(object):
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/sruupdateuploader.py version_7.1/meresco/harvester/sruupdateuploader.py
--- version_7.0.3/meresco/harvester/sruupdateuploader.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/sruupdateuploader.py	2011-06-22 16:03:31.000000000 +0200
@@ -37,9 +37,10 @@
 from httplib import HTTPConnection, SERVICE_UNAVAILABLE, OK as HTTP_OK
 from lxml.etree import parse
 from StringIO import StringIO
+from meresco.harvester.namespaces import xpath
 
 recordUpdate = """<?xml version="1.0" encoding="UTF-8"?>
-<updateRequest xmlns:srw="http://www.loc.gov/zing/srw/" xmlns:ucp="info:lc/xmlns/update-v1">
+<ucp:updateRequest xmlns:srw="http://www.loc.gov/zing/srw/" xmlns:ucp="info:lc/xmlns/update-v1">
     <srw:version>1.0</srw:version>
     <ucp:action>info:srw/action/1/%(action)s</ucp:action>
     <ucp:recordIdentifier>%(recordIdentifier)s</ucp:recordIdentifier>
@@ -48,15 +49,7 @@
         <srw:recordSchema>%(recordSchema)s</srw:recordSchema>
         <srw:recordData>%(recordData)s</srw:recordData>
     </srw:record>
-</updateRequest>"""
-
-namespaces = {
-    'srw': 'http://www.loc.gov/zing/srw/',
-    'diag': 'http://www.loc.gov/zing/srw/diagnostic/',
-    'ucp':  "info:lc/xmlns/update-v1",
-}
-def xpath(node, path):
-    return node.xpath(path, namespaces=namespaces)
+</ucp:updateRequest>"""
 
 class SruUpdateUploader(VirtualUploader):
     def __init__(self, sruUpdateTarget, eventlogger, collection="ignored"):
@@ -65,7 +58,7 @@
 
     def send(self, anUpload):
         anId = anUpload.id
-        self.logLine('UPLOAD.SEND', 'START', id = anId)
+        self._logLine('UPLOAD.SEND', 'START', id = anId)
 
         recordData = '<document xmlns="http://meresco.org/namespace/harvester/document">%s</document>' % ''.join(
                 ['<part name="%s">%s</part>' % (xmlEscape(partName), xmlEscape(partValue)) for partName, partValue in anUpload.parts.items()])
@@ -75,10 +68,10 @@
         recordPacking = 'xml'
         recordSchema = xmlEscape(partName)
         self._sendData(anId, recordUpdate % locals())
-        self.logLine('UPLOAD.SEND', 'END', id = anId)
+        self._logLine('UPLOAD.SEND', 'END', id = anId)
 
     def delete(self, anUpload):
-        self.logDelete(anUpload.id)
+        self._logDelete(anUpload.id)
         action = "delete"
         recordIdentifier = xmlEscape(anUpload.id)
         recordPacking = 'xml'
@@ -95,7 +88,7 @@
             status, message = self._sendDataToRemote(data)
             if status != SERVICE_UNAVAILABLE:
                 break
-            self.logWarning("Status 503, SERVICE_UNAVAILABLE received while trying to upload")
+            self._logWarning("Status 503, SERVICE_UNAVAILABLE received while trying to upload")
             tries += 1
                 
         if status != HTTP_OK:
@@ -129,7 +122,7 @@
         diagnostics = xpath(message, "/srw:updateResponse/srw:diagnostics/diag:diagnostic")
         if len(diagnostics) > 0:
             diagnostic_uri = xpath(diagnostics[0], "diag:uri/text()")[0]
-            diagnostic_details = xpath(diagnostics[0], "diag:details/text()")[0]
-            diagnostic_message = xpath(diagnostics[0], "diag:message/text()")[0]
+            diagnostic_details = ''.join(xpath(diagnostics[0], "diag:details/text()"))
+            diagnostic_message = ''.join(xpath(diagnostics[0], "diag:message/text()"))
             diagresult = (diagnostic_uri, diagnostic_details, diagnostic_message)
         return version, operationStatus, diagresult
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/startharvester.py version_7.1/meresco/harvester/startharvester.py
--- version_7.0.3/meresco/harvester/startharvester.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/startharvester.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from harvesterlog import HarvesterLog
@@ -53,7 +55,7 @@
         self.__dict__.update(args.__dict__)
 
         if not self.domainId:
-            self.parser.error("Specify domain")
+            self.parser.logError("Specify domain")
 
         if self._logDir == None:
             self._logDir = urlopen(self.saharaurl + '/_getoptions/logDir').read()
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/state.py version_7.1/meresco/harvester/state.py
--- version_7.0.3/meresco/harvester/state.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/state.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,30 +1,32 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2010-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#    Copyright (C) 2011 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2010-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Tilburg University http://www.uvt.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from os.path import join, isfile
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/target.py version_7.1/meresco/harvester/target.py
--- version_7.0.3/meresco/harvester/target.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/target.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from saharaobject import SaharaObject
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/throughputanalyser.py version_7.1/meresco/harvester/throughputanalyser.py
--- version_7.0.3/meresco/harvester/throughputanalyser.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/throughputanalyser.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 #
 #
 import re, sys, os
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/timedprocess.py version_7.1/meresco/harvester/timedprocess.py
--- version_7.0.3/meresco/harvester/timedprocess.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/timedprocess.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from os import spawnvp, waitpid, kill, P_NOWAIT
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/timeslot.py version_7.1/meresco/harvester/timeslot.py
--- version_7.0.3/meresco/harvester/timeslot.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/timeslot.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 import datetime
 import time
 import re
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/meresco/harvester/virtualuploader.py version_7.1/meresco/harvester/virtualuploader.py
--- version_7.0.3/meresco/harvester/virtualuploader.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/meresco/harvester/virtualuploader.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,36 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 import sys
@@ -76,17 +78,17 @@
         """Return information on yourself."""
         raise NotImplementedError(self.info.__doc__)
 
-    def logLine(self, *args, **kwargs):
-        self._logger.logLine(*args, **kwargs)
+    def uploaderInfo(self):
+        return self.info()
 
-    def logError(self, *args, **kwargs):
-        self._logger.error(*args, **kwargs)
+    def _logLine(self, *args, **kwargs):
+        self._logger.logLine(*args, **kwargs)
 
-    def logDelete(self, anId):
-        self.logLine('DELETE', "Delete document", id=anId)
+    def _logDelete(self, anId):
+        self._logLine('DELETE', "Delete document", id=anId)
 
-    def logWarning(self, *args, **kwargs):
-        self._logger.warning(*args, **kwargs)
+    def _logWarning(self, *args, **kwargs):
+        self._logger.logWarning(*args, **kwargs)
 
 class UploaderFactory(object):
     def __init__(self):
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/README version_7.1/README
--- version_7.0.3/README	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/README	2011-06-22 16:03:31.000000000 +0200
@@ -1,4 +1,4 @@
-"Meresco Harvester" is the OAI-Harvester from the Meresco Suite 2005-2010
+"Meresco Harvester" is the OAI-Harvester from the Meresco Suite 2005-2011
 
 http://www.meresco.org
 
@@ -7,6 +7,12 @@
 
 1. Installation
 ---------------
+Seecr (Seek You Too B.V.) provides a Meresco Software repository to ease the installation of e.g. Meresco Harvester. For Debian and Redhat based systems see http://repository.seecr.nl for instructions to configure your package manager to use this repository.
+
+Installation using the Meresco Software Repository:
+    - install python-meresco-harvester with your package manager.
+
+For other systems or source based installation look at the 'deps.txt' file for all dependencies. Sources can be downloaded from http://meresco.org/sources
 Installation can be done with python distutils.
     $ python setup.py install
 
@@ -21,7 +27,7 @@
 2.1 Apache Configuration
 ------------------------
     An example apache configuration is given in the example directory. Please
-    change it to your needs. 
+    change it to your needs. (see 'examples/meresco-harvester.apache.conf)
 
 2.1.1 Apache Worker (Threaded Model)
 ------------------------------------
@@ -87,11 +93,36 @@
 
     The webcontrolpanel does not work if the encoding is different.
 
+    Please also add the following to the '/etc/apache2/envvars':
+    export LANG=en_US.UTF-8
+    export LC_ALL=en_US.UTF-8
+
 2.3 Webcontrolpanel Configuration
 ---------------------------------
-    The webcontrolpanel has one special user called 'admin', with extra privileges.
-    They are documentend at http://meresco.org
+    The webcontrolpanel consists of two http services working together. The
+    first is configured with the apache configuration mentioned earlier. It 
+    makes use of the second internalserver. This internalserver must be
+    configured separately.
+
+    To access the webcontrolpanel users will need a name and password. 
+    The special user 'admin' can create these. An initial password for this
+    user must also be created.
+
+2.3.1 Internalserver
+--------------------
+    The internal server is needed by the webcontrolpanel to include new 
+    (dynamicHtml) pages. An example configuration file is given in the
+    examples directory, see 'harvester.config'
+    This server is independent of Apache. Take care that the options in
+    the configuration file are equal to the Apache configuration.
+    We recommend using daemontools (http://cr.yp.to/daemontools.html) for
+    running this service.
+    The service is then started using the script 
+    'meresco-harvester-internal-server' 
 
+2.3.2 User administration
+-------------------------
+    The webcontrolpanel has one special user called 'admin', with extra privileges.
     Amongst these privileges is the right to create users. This is all done
     in the webcontrolpanel. The created users are stored in the file specified
     in the apache configuration (PythonOption usersfile)
@@ -103,21 +134,17 @@
     admin user, a default usersfile is in the example directory. It contains the
     admin user with the password 'admin'.
 
-2.3.1 Changing the admin password
+2.3.2.1 Changing the admin password
 ---------------------------------
     To create a password for the user admin you can do:
       $ echo "admin:$(echo -n <yourpassword> | md5sum | awk '{print $1}')" > users.txt
 
+
 2.4 Harvesting configuration
 -----------------------------
-    Harvesting is done with the startharvester.py script which is in the example
-    directory.
-    The user that will run the startharvester.py script will need to have
+    Harvesting is done with the 'meresco-harvester' script.
+    The user that will run the 'meresco-harvester' script will need to have
     read/write permissions in the stateDir and logDir specified in the
     apache configuration.
     
 
-3. Further Reading
-------------------
-    For more information take a look at http://meresco.org or at the
-    documentation in the doc directory.
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/setup.py version_7.1/setup.py
--- version_7.0.3/setup.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/setup.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from distutils.core import setup
 
 setup(
@@ -44,12 +47,13 @@
         ]
     },
     scripts=[
-        'bin/start-harvester-internal-server',
+        'bin/meresco-harvester-internal-server',
+        'bin/meresco-harvester',
     ],
     version='%VERSION%',
     url='http://www.meresco.org',
-    author='Seek You Too',
-    author_email='info@cq2.nl',
+    author='Seecr',
+    author_email='info@seecr.nl',
     description='"Meresco Harvester" consists of two subsystems, namely an OAI-harvester and a web-control panel.',
     long_description='"Meresco Harvester" consists of two subsystems, namely an OAI-harvester and a web-control panel.',
     license='GNU Public License',
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/actiontestcase.py version_7.1/test/actiontestcase.py
--- version_7.0.3/test/actiontestcase.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/actiontestcase.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,35 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from cq2utils import CallTrace, CQ2TestCase
 from meresco.harvester.harvesterlog import HarvesterLog
 from os.path import join
@@ -65,7 +67,7 @@
  
         h.startRepository()
         h.notifyHarvestedRecord("repo:uploadId1")
-        h.logID("repo:uploadId1")
+        h.uploadIdentifier("repo:uploadId1")
         if exception != None:
             try:
                 raise Exception(exception)
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/_alltests.py version_7.1/test/_alltests.py
--- version_7.0.3/test/_alltests.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/_alltests.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,36 @@
 #!/usr/bin/env python
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from os import getuid
@@ -47,7 +49,6 @@
 
 from amaraforharvestertest import AmaraForHarvesterTest
 from cacherecordtest import CacheRecordTest
-from deleteidstest import DeleteIdsTest
 from disallowfileplugintest import DisallowFilePluginTest
 from eventloggertest import EventLoggerTest
 from filesystemuploadtest import FileSystemUploaderTest
Only in version_7.0.3/test: deleteidstest.py
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/disallowfileplugintest.py version_7.1/test/disallowfileplugintest.py
--- version_7.0.3/test/disallowfileplugintest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/disallowfileplugintest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 import unittest
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/eventloggertest.py version_7.1/test/eventloggertest.py
--- version_7.0.3/test/eventloggertest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/eventloggertest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 import unittest,os,re
@@ -73,26 +75,26 @@
         self.assertEquals('error err\t[uu_234]\tbbb ddd', self.logfile.readline().strip()[DATELENGTH:])
 
     def testSucces(self):
-        self.logger.succes('really succesful')
-        self.logger.succes('really succesful','aa')
+        self.logger.logSuccess('really succesful')
+        self.logger.logSuccess('really succesful','aa')
         date,event,id,logtext = self.readLogLine()
         self.assertEquals('', id)
         self.assertEquals('SUCCES', event)
         self.assertEquals('really succesful',logtext)
         self.assertEquals('SUCCES\t[aa]\treally succesful', self.logfile.readline().strip()[DATELENGTH:])
 
-    def testFail(self):
-        self.logger.fail()
-        self.logger.fail('uh oh','11')
-        self.logger.failure('comm','id')
+    def testFailure(self):
+        self.logger.logFailure()
+        self.logger.logFailure('uh oh','11')
+        self.logger.logFailure('comm','id')
         self.assertEquals('FAILURE\t[]\t', self.logfile.readline()[DATELENGTH:-1])
         self.assertEquals('FAILURE\t[11]\tuh oh', self.logfile.readline().strip()[DATELENGTH:])
         self.assertEquals('FAILURE\t[id]\tcomm', self.logfile.readline().strip()[DATELENGTH:])
 
     def testError(self):
-        self.logger.error()
-        self.logger.error('uh oh','11')
-        self.logger.error('comm','id')
+        self.logger.logError()
+        self.logger.logError('uh oh','11')
+        self.logger.logError('comm','id')
         self.assertEquals('ERROR\t[]\t', self.logfile.readline()[DATELENGTH:-1])
         self.assertEquals('ERROR\t[11]\tuh oh', self.logfile.readline().strip()[DATELENGTH:])
         self.assertEquals('ERROR\t[id]\tcomm', self.logfile.readline().strip()[DATELENGTH:])
@@ -101,7 +103,7 @@
         stream = StringIO()
         logger = StreamEventLogger(stream)
         logger.logLine('BLA','something')
-        logger.error('this should not happen.')
+        logger.logError('this should not happen.')
         lines = []
         stream.seek(0)
         for line in stream:
@@ -111,7 +113,7 @@
     def testLogNone(self):
         stream = StringIO()
         logger = StreamEventLogger(stream)
-        logger.error(None)
+        logger.logError(None)
         logger.logLine(None, None)
         lines = []
         stream.seek(0)
@@ -132,12 +134,12 @@
 
     def testCompositeLogger(self):
         stream1, stream2, comp = self.compositLogger()
-        comp.info('info', 'id')
+        comp.logInfo('info', 'id')
         self.assertEquals('', stream2.getvalue())
         self.assertEquals('INFO\t[id]\tinfo\n', stream1.getvalue()[DATELENGTH:])
 
     def testCompositeLogger2(self):
         stream1, stream2, comp = self.compositLogger()
-        comp.error('error', 'id')
+        comp.logError('error', 'id')
         self.assertEquals('ERROR\t[id]\terror\n', stream1.getvalue()[DATELENGTH:])
         self.assertEquals('ERROR\t[id]\terror\n', stream2.getvalue()[DATELENGTH:])
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/filesystemuploadtest.py version_7.1/test/filesystemuploadtest.py
--- version_7.0.3/test/filesystemuploadtest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/filesystemuploadtest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,36 +1,39 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl 
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 import unittest
 from meresco.harvester.filesystemuploader import FileSystemUploader
 from meresco.harvester.virtualuploader import UploaderException
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/harvestactiontest.py version_7.1/test/harvestactiontest.py
--- version_7.0.3/test/harvestactiontest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/harvestactiontest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,35 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from actiontestcase import ActionTestCase
 from cq2utils import CallTrace
 from meresco.harvester.action import HarvestAction
@@ -96,14 +98,6 @@
         h = self.newHarvesterLog()
         self.assertEquals((None, None), (h.from_, h.token))
 
-    def testOriginalCreateHarvester(self):
-        HarvestAction._createHarvester = self._original_createHarvester
-        action = self.newHarvestAction()
-        harvester = action._createHarvester()
-        self.assertEquals(2, len(harvester._observers))
-        self.assertEquals(OaiRequest, type(harvester._observers[0]))
-        self.assertEquals(self.repository.baseurl, harvester._observers[0]._url)
-
     def newHarvestAction(self):
         return HarvestAction(self.repository, stateDir=self.tempdir, logDir=self.tempdir, generalHarvestLog=NilEventLogger())
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/harvesterlogtest.py version_7.1/test/harvesterlogtest.py
--- version_7.0.3/test/harvesterlogtest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/harvesterlogtest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,44 +1,47 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
-import unittest,os
+import unittest, os
 from time import strftime, gmtime
+from os.path import isfile
+from shutil import rmtree
+from tempfile import mkdtemp
+
 from meresco.harvester.harvesterlog import HarvesterLog
 from meresco.harvester import harvesterlog
 from meresco.harvester.eventlogger import LOGLINE_RE
 from meresco.harvester.virtualuploader import UploaderException
-from tempfile import mkdtemp
-from shutil import rmtree
 
 
 class HarvesterLogTest(unittest.TestCase):
@@ -93,11 +96,11 @@
         logger = HarvesterLog(stateDir=self.stateDir, logDir=self.logDir,name= 'name')
         logger.startRepository()
         logger.notifyHarvestedRecord("name:uploadId1")
-        logger.logID("name:uploadId1")
+        logger.uploadIdentifier("name:uploadId1")
         logger.notifyHarvestedRecord("name:uploadId1")
-        logger.logDeletedID("name:uploadId1")
+        logger.deleteIdentifier("name:uploadId1")
         logger.notifyHarvestedRecord("name:uploadId2")
-        logger.logIgnoredID("name:uploadId2", "Test Exception")
+        logger.ignoreIdentifier("name:uploadId2", "Test Exception")
         logger.endRepository(None)
         logger.close()
         lines = open(self.stateDir+'/name.stats').readlines()
@@ -116,7 +119,7 @@
         logger.startRepository()
         try:
             logger.notifyHarvestedRecord("name:uploadId1")
-            logger.logID("name:uploadId1")
+            logger.uploadIdentifier("name:uploadId1")
             logger.notifyHarvestedRecord("name:uploadId2")
             raise Exception('FATAL')
         except:
@@ -140,31 +143,51 @@
         logger = HarvesterLog(stateDir=self.stateDir, logDir=self.logDir,name= 'name')
         logger.startRepository()
         self.assertEquals(2,logger.totalIds())
-        logger.logID('id:3')
+        logger.uploadIdentifier('id:3')
         self.assertEquals(3,logger.totalIds())
-        logger.logID('id:3')
-        logger.logID('id:2')
+        logger.uploadIdentifier('id:3')
+        logger.uploadIdentifier('id:2')
         self.assertEquals(3,logger.totalIds())
 
-    def testLogIgnoredIDs(self):
+    def testLogIgnoredID(self):
         logger = HarvesterLog(stateDir=self.stateDir, logDir=self.logDir, name='name')
         logger.startRepository()
-        logger.notifyHarvestedRecord('id:4')
-        logger.logIgnoredID('id:4', "Error")
+        logger.notifyHarvestedRecord('repoid:oai:bla/bla')
+        logger.ignoreIdentifier('repoid:oai:bla/bla', "Error")
         self.assertEquals(1, logger.totalIgnoredIds())
-        logger.notifyHarvestedRecord('id:4')
+        self.assertEquals("Error", open(self.logDir+'/ignored/repoid/oai:bla%2Fbla').read())
+        logger.notifyHarvestedRecord('repoid:oai:bla/bla')
         self.assertEquals(0, logger.totalIgnoredIds())
-        logger.logID('id:4')
+        logger.uploadIdentifier('repoid:oai:bla/bla')
         self.assertEquals(1, logger.totalIds())
 
     def testListIgnoredIDs(self):
         logger = HarvesterLog(stateDir=self.stateDir, logDir=self.logDir, name='name')
         logger.startRepository()
         logger.notifyHarvestedRecord('id:1')
-        logger.logIgnoredID('id:1', "Error")
+        logger.ignoreIdentifier('id:1', "Error")
         logger.notifyHarvestedRecord('id:2')
-        logger.logIgnoredID('id:2', "Error")
+        logger.ignoreIdentifier('id:2', "Error")
         self.assertEquals(['id:1', 'id:2'], logger.ignoredIds())
+        
+    def testClearIgnored(self):
+        logger = HarvesterLog(stateDir=self.stateDir, logDir=self.logDir, name='name')
+        logger.startRepository()
+        logger.notifyHarvestedRecord('repoid:oai:bla/bla')
+        logger.ignoreIdentifier('repoid:oai:bla/bla', "Error")
+        self.assertTrue(isfile(self.logDir + '/ignored/repoid/oai:bla%2Fbla'))
+        logger.notifyHarvestedRecord('repoid:recordid')
+        logger.ignoreIdentifier('repoid:recordid', "Error")
+        self.assertTrue(isfile(self.logDir + '/ignored/repoid/recordid'))
+        logger.notifyHarvestedRecord('repo2:1')
+        logger.ignoreIdentifier('repo2:1', "Error")
+        self.assertTrue(isfile(self.logDir + '/ignored/repo2/1'))
+        self.assertEquals(['repoid:oai:bla/bla', 'repoid:recordid', 'repo2:1'], logger.ignoredIds())
+        logger.clearIgnored('repoid')
+        self.assertEquals(['repo2:1'], logger.ignoredIds())
+        self.assertFalse(isfile(self.logDir + '/ignored/repoid/oai:bla%2Fbla'))
+        self.assertFalse(isfile(self.logDir + '/ignored/repoid/recordid'))
+        self.assertTrue(isfile(self.logDir + '/ignored/repo2/1'))
 
     def testLogDeleted(self):
         logger = HarvesterLog(stateDir=self.stateDir, logDir=self.logDir,name='emptyrepoi')
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/harvestertest.py version_7.1/test/harvestertest.py
--- version_7.0.3/test/harvestertest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/harvestertest.py	2011-06-22 16:03:31.000000000 +0200
@@ -136,9 +136,14 @@
 
     def createHarvesterWithMockUploader(self, name, set=None, mockRequest = None):
         self.logger=HarvesterLog(stateDir=self.stateDir, logDir=self.logDir, name=name)
-        harvester = Harvester(self.MockRepository(name, set), stateDir=self.stateDir, logDir=self.logDir, eventLogger=self.logger.eventLogger())
+        repository = self.MockRepository(name, set)
+        uploader = repository.createUploader(self.logger.eventLogger())
+        self.mapper = repository.mapping()
+        harvester = Harvester(repository)
         harvester.addObserver(mockRequest or MockOaiRequest('mocktud'))
         harvester.addObserver(self.logger)
+        harvester.addObserver(uploader)
+        harvester.addObserver(self.mapper)
         return harvester
 
     def testSimpleStat(self):
@@ -174,9 +179,11 @@
         self.logger=HarvesterLog(stateDir=self.stateDir, logDir=self.logDir, name='tud')
         repository = self.MockRepository('tud', None)
         repository.metadataPrefix='lom'
-        harvester = Harvester(repository, stateDir=self.stateDir, logDir=self.logDir, eventLogger=self.logger.eventLogger())
+        harvester = Harvester(repository)
         harvester.addObserver(MockOaiRequest('mocktud'))
         harvester.addObserver(self.logger)
+        harvester.addObserver(repository.createUploader(self.logger.eventLogger))
+        harvester.addObserver(repository.mapping())
         harvester.harvest()
         self.assertEquals(['tud:oai:lorenet:147'],self.sendId)
 
@@ -209,9 +216,11 @@
         f.close()
         repository = self.MockRepository3('tud' ,'http://repository.tudelft.nl/oai', None, 'tud')
         logger = self.createLogger()
-        h = Harvester(repository, stateDir=self.stateDir, logDir=self.logDir, eventLogger=logger.eventLogger())
+        h = Harvester(repository)
         h.addObserver(self)
         h.addObserver(logger)
+        h.addObserver(repository.createUploader(logger.eventLogger))
+        h.addObserver(repository.mapping())
         self.listRecordsFrom = None
         self.sendReturn = '127.0.0.1-123@localhost-12312-12312424123'
         h.harvest()
@@ -228,9 +237,11 @@
         f.close();
         repository = self.MockRepository3('tud' ,'http://repository.tudelft.nl/oai', None, 'tud')
         logger = self.createLogger()
-        h = Harvester(repository, stateDir=self.stateDir, logDir=self.logDir, eventLogger=logger.eventLogger())
+        h = Harvester(repository)
         h.addObserver(self)
         h.addObserver(logger)
+        h.addObserver(repository.createUploader(logger.eventLogger))
+        h.addObserver(repository.mapping())
         self.listRecordsFrom = None
         h.harvest()
         self.assertEquals('1998-12-01', self.listRecordsFrom)
@@ -243,9 +254,11 @@
         f.close();
         repository = self.MockRepository3('tud' ,'http://repository.tudelft.nl/oai', None, 'tud')
         logger = self.createLogger()
-        h = Harvester(repository, stateDir=self.stateDir, logDir=self.logDir, eventLogger=logger.eventLogger())
+        h = Harvester(repository)
         h.addObserver(self)
         h.addObserver(logger)
+        h.addObserver(repository.createUploader(logger.eventLogger))
+        h.addObserver(repository.mapping())
         self.listRecordsFrom = None
         h.harvest()
         self.assertEquals('aap', self.listRecordsFrom)
@@ -257,9 +270,11 @@
         f.close();
         repository = self.MockRepository3('tud' ,'http://repository.tudelft.nl/oai', None, 'tud')
         logger = self.createLogger()
-        h = Harvester(repository, stateDir=self.stateDir, logDir=self.logDir, eventLogger=logger.eventLogger())
+        h = Harvester(repository)
         h.addObserver(self)
         h.addObserver(logger)
+        h.addObserver(repository.createUploader(logger.eventLogger))
+        h.addObserver(repository.mapping())
         self.listRecordsToken = None
         h.harvest()
         self.assertEquals('ga+hier+verder', self.listRecordsToken)
@@ -299,7 +314,7 @@
         record = parse_xml("""<record><header><identifier>mockid</identifier></header><metadata><dc><title>mocktitle</title></dc></metadata><about/></record>""").record
         upload = Upload(record=record)
         upload.id = 'tud:mockid'
-        harvester._mapper.createUpload = lambda repository,record,logger: upload
+        self.mapper.createUpload = lambda repository,record: upload
         harvester.uploadRecord(record)
         self.assertEquals(['tud:mockid'], self.sendId)
         self.assertFalse(hasattr(self, 'delete_id'))
@@ -310,7 +325,7 @@
         upload = Upload(record=record)
         upload.id = "tud:mockid"
         upload.skip = True
-        harvester._mapper.createUpload = lambda repository,record,logger: upload
+        self.mapper.createUpload = lambda repository,record: upload
         harvester.uploadRecord(record)
         self.assertEquals([], self.sendId)
         self.assertFalse(hasattr(self, 'delete_id'))
@@ -329,49 +344,33 @@
         harvester.harvest()
         lines = open(self.stateDir+'/tud.stats').readlines()
 
-    def testMapping(self):
-        harvester = self.createHarvesterWithMockUploader('tud')
-        self.assertEquals('insttud',harvester._mapper.name)
-        harvester = self.createHarvesterWithMockUploader('other')
-        self.assertEquals('instother',harvester._mapper.name)
-
-    def xtestHarvestNottoolong(self):
-        harvester = self.createHarvesterWithMockUploader('tud')
-        harvester._MAXTIME=5
-        harvester.listRecords = self.listRecordsButWaitLong
-        harvester.harvest()
-
-    def testHarvesterIgnoringInvalidDataErrors(self):
+    def testHarvesterStopsIgnoringAfter100records(self):
         record = parse_xml("""<record><header><identifier>mockid</identifier></header><metadata><dc><title>mocktitle</title></dc></metadata><about/></record>""").record
+        observer = CallTrace('observer')
         upload = Upload(record=record)
         upload.id = 'mockid'
-        uploader=CallTrace("uploader")
-        uploader.exceptions['send'] =  InvalidDataException(upload.id, "message")
-        mapper=CallTrace("mapper", returnValues={'createUpload': upload})
-        repository=CallTrace("repository", returnValues={'createUploader': uploader, 'mapping': mapper, 'maxIgnore': 0})
-        observer=CallTrace("observer", returnValues={'totalIgnoredIds': 42})
-        harvester = Harvester(repository, stateDir=self.stateDir, logDir=self.logDir, eventLogger=None)
+        observer.returnValues['createUpload'] = upload
+        observer.returnValues['totalIgnoredIds'] = 100
+        observer.exceptions['send'] =  InvalidDataException(upload.id, "message")
+        repository=CallTrace("repository", returnValues={'maxIgnore': 100})
+        harvester = Harvester(repository)
         harvester.addObserver(observer)
         self.assertRaises(TooMuchInvalidDataException, lambda: harvester.uploadRecord(record))
-        self.assertEquals(["notifyHarvestedRecord", "totalIgnoredIds"], [m.name for m in observer.calledMethods])
-        observer.calledMethods = []
-        repository.returnValues['maxIgnore'] = 43
-        harvester.uploadRecord(record)
-        self.assertEquals(["notifyHarvestedRecord", "totalIgnoredIds", "logIgnoredID"], [m.name for m in observer.calledMethods])
+        self.assertEquals(['createUpload', "notifyHarvestedRecord", "send", "totalIgnoredIds"], [m.name for m in observer.calledMethods])
 
-    def testHarvesterStopsIgnoringAfter100records(self):
+    def testHarvesterIgnoringInvalidDataErrors(self):
         record = parse_xml("""<record><header><identifier>mockid</identifier></header><metadata><dc><title>mocktitle</title></dc></metadata><about/></record>""").record
+        observer = CallTrace('observer')
         upload = Upload(record=record)
         upload.id = 'mockid'
-        uploader=CallTrace("uploader")
-        uploader.exceptions['send'] =  InvalidDataException(upload.id, "message")
-        mapper=CallTrace("mapper", returnValues={'createUpload': upload})
-        repository=CallTrace("repository", returnValues={'createUploader': uploader, 'mapping': mapper, 'maxIgnore': 100})
-        observer=CallTrace("observer", returnValues={'totalIgnoredIds': 100})
-        harvester = Harvester(repository, stateDir=self.stateDir, logDir=self.logDir, eventLogger=None)
+        observer.returnValues['createUpload'] = upload
+        observer.returnValues['totalIgnoredIds'] = 0
+        observer.exceptions['send'] =  InvalidDataException(upload.id, "message")
+        repository=CallTrace("repository", returnValues={'maxIgnore': 100})
+        harvester = Harvester(repository)
         harvester.addObserver(observer)
-        self.assertRaises(TooMuchInvalidDataException, lambda: harvester.uploadRecord(record))
-        self.assertEquals(["notifyHarvestedRecord", "totalIgnoredIds"], [m.name for m in observer.calledMethods])
+        harvester.uploadRecord(record)
+        self.assertEquals(['createUpload', "notifyHarvestedRecord", "send", "totalIgnoredIds", 'ignoreIdentifier'], [m.name for m in observer.calledMethods])
 
     #self shunt:
     def send(self, upload):
@@ -386,7 +385,7 @@
     def delete(self, anUpload):
         self.delete_id = anUpload.id
 
-    def info(self):
+    def uploaderInfo(self):
         return 'The uploader is connected to /dev/null'
 
     def start(self):
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/idstest.py version_7.1/test/idstest.py
--- version_7.0.3/test/idstest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/idstest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from cq2utils import CQ2TestCase
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/__init__.py version_7.1/test/__init__.py
--- version_7.0.3/test/__init__.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/__init__.py	2011-06-22 16:03:31.000000000 +0200
@@ -0,0 +1,29 @@
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/integration/harvestertest.py version_7.1/test/integration/harvestertest.py
--- version_7.0.3/test/integration/harvestertest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/integration/harvestertest.py	2011-06-22 16:03:31.000000000 +0200
@@ -27,6 +27,7 @@
 #    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 #
 ## end license ##
+from __future__ import with_statement
 
 from os import system, waitpid, listdir
 from os.path import join, dirname, abspath
@@ -34,37 +35,308 @@
 from time import time, sleep
 from subprocess import Popen
 from shutil import copytree
+from lxml.etree import parse
 
 from cq2utils import CQ2TestCase
 from utils import getRequest
 
 from integrationtestcase import IntegrationTestCase
 
+from meresco.harvester.state import getResumptionToken
+from meresco.harvester.harvesterlog import HarvesterLog
+from meresco.harvester.controlpanel import RepositoryData
+from meresco.harvester.namespaces import xpath
+
+BATCHSIZE=10
+DOMAIN='adomain'
+REPOSITORY='harvestertest'
+
 class HarvesterTest(IntegrationTestCase):
     def setUp(self):
         IntegrationTestCase.setUp(self)
-        system("rm -rf %s/*" % self.dumpDir)
         system("rm -rf %s" % self.harvesterLogDir)
         system("rm -rf %s" % self.harvesterStateDir)
+        self.filesystemDir = join(self.integrationTempdir, 'filesystem')
+        system("rm -rf %s" % self.filesystemDir)
+        system("mkdir -p %s" % join(self.harvesterStateDir, DOMAIN))
+        self.repofilepath = join(self.integrationTempdir, 'data', "%s.%s.repository" % (DOMAIN, REPOSITORY))
+        repo = RepositoryData(REPOSITORY)
+        repo.use = 'true'
+        repo.baseurl = 'http://localhost:%s/oai' % self.helperServerPortNumber
+        repo.targetId = 'SRUUPDATE'
+        repo.mappingId = 'MAPPING'
+        repo.metadataPrefix = 'oai_dc'
+        repo.maximumIgnore = '5'
+        repo.save(self.repofilepath)
 
-    def testHarvestToDump(self):
-        self.startHarvester()
-        self.assertEquals(14, len(listdir(self.dumpDir)))
+    def testHarvestToSruUpdate(self):
+        # initial harvest
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(BATCHSIZE, self.sizeDumpDir())
         self.assertEquals(2, len([f for f in listdir(self.dumpDir) if "info:srw/action/1/delete" in open(join(self.dumpDir, f)).read()]))
-        ids = open(join(self.harvesterStateDir, "adomain", "integrationtest.ids")).readlines()
-        self.assertEquals(10, len(ids))
-        ignoredIds = open(join(self.harvesterStateDir, "adomain", "integrationtest_ignored.ids")).readlines()
+        ids = open(join(self.harvesterStateDir, DOMAIN, "%s.ids" % REPOSITORY)).readlines()
+        self.assertEquals(8, len(ids))
+        ignoredIds = open(join(self.harvesterStateDir, DOMAIN, "%s_ignored.ids" % REPOSITORY)).readlines()
         self.assertEquals(0, len(ignoredIds))
+        logs = self.getLogs()
+        self.assertEquals(1, len(logs))
+        self.assertEquals('/oai', logs[-1]['path'])
+        self.assertEquals({'verb':['ListRecords'], 'metadataPrefix':['oai_dc']}, logs[-1]['arguments'])
+        statsFile = join(self.harvesterStateDir, DOMAIN, '%s.stats' % REPOSITORY)
+        token = getResumptionToken(open(statsFile).readlines()[-1])
+
+        # resumptionToken
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(15, self.sizeDumpDir())
+        ids = open(join(self.harvesterStateDir, DOMAIN, "%s.ids" % REPOSITORY)).readlines()
+        self.assertEquals(13, len(ids))
+        logs = self.getLogs()
+        self.assertEquals(2, len(logs))
+        self.assertEquals('/oai', logs[-1]['path'])
+        self.assertEquals({'verb':['ListRecords'], 'resumptionToken':[token]}, logs[-1]['arguments'])
+
+        # Nothing
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(2, len(self.getLogs()))
+        self.assertEquals(None, getResumptionToken(open(statsFile).readlines()[-1]))
+
+    def testIncrementalHarvesting(self):
+        statsFile = join(self.harvesterStateDir, DOMAIN, '%s.stats' % REPOSITORY)
+        with open(statsFile, 'w') as f:
+            f.write('Started: 2011-04-01 14:11:44, Harvested/Uploaded/Deleted/Total: 300/300/0/300, Done: 2011-04-01 14:12:36, ResumptionToken:\n')
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(BATCHSIZE, self.sizeDumpDir())
+        logs = self.getLogs()
+        self.assertEquals(1, len(logs))
+        self.assertEquals('/oai', logs[-1]['path'])
+        self.assertEquals({'verb':['ListRecords'], 'metadataPrefix':['oai_dc'], 'from':['2011-04-01']}, logs[-1]['arguments'])
+
+    def testClear(self):
+        self.startHarvester(repository=REPOSITORY)
+        logLen = len(self.getLogs())
+        self.assertEquals(BATCHSIZE, self.sizeDumpDir())
+
+        r = RepositoryData.read(self.repofilepath)
+        r.action='clear'
+        r.save(self.repofilepath)
+
+        self.startHarvester(repository=REPOSITORY)
+        logs = self.getLogs()
+        self.assertEquals(logLen+1, len(logs))
+        self.assertEquals('/setactiondone', logs[-1]["path"])
+        self.assertEquals({'domainId': [DOMAIN], 'repositoryId': [REPOSITORY]}, logs[-1]["arguments"])
+        r = RepositoryData.read(self.repofilepath) #really set action done
+        r.action=''
+        r.save(self.repofilepath)
+        self.assertEquals(18, self.sizeDumpDir())
+        for filename in sorted(listdir(self.dumpDir))[-8:]:
+            self.assertTrue('_delete.updateRequest' in filename, filename)
+
+    def testRefresh(self):
+        log = HarvesterLog(stateDir=join(self.harvesterStateDir, DOMAIN), logDir=join(self.harvesterLogDir, DOMAIN), name=REPOSITORY)
+        log.startRepository()
+        for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [1,2,120,121]]:
+            log.notifyHarvestedRecord(uploadId)
+            log.uploadIdentifier(uploadId)
+        for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [4,5,122,123]]:
+            log.notifyHarvestedRecord(uploadId)
+            log.deleteIdentifier(uploadId)
+        log.endRepository('token')
+        log.close()
+
+        r = RepositoryData.read(self.repofilepath)
+        r.action='refresh'
+        r.save(self.repofilepath)
+
+        self.startHarvester(repository=REPOSITORY)
+        logs = self.getLogs()
+        self.assertEquals(0, len(logs))
+        self.startHarvester(repository=REPOSITORY)
+        logs = self.getLogs()
+        self.assertEquals('/oai', logs[-1]["path"])
+        self.assertEquals({'verb': ['ListRecords'], 'metadataPrefix': ['oai_dc']}, logs[-1]["arguments"])
+        statsFile = join(self.harvesterStateDir, DOMAIN, '%s.stats' % REPOSITORY)
+        token = getResumptionToken(open(statsFile).readlines()[-1])
+
+        self.startHarvester(repository=REPOSITORY)
+        logs = self.getLogs()
+        self.assertEquals('/oai', logs[-1]["path"])
+        self.assertEquals({'verb': ['ListRecords'], 'resumptionToken': [token]}, logs[-1]["arguments"])
+        self.assertEquals(15, self.sizeDumpDir())
+
+        self.startHarvester(repository=REPOSITORY)
+        logs = self.getLogs()
+        self.assertEquals('/setactiondone', logs[-1]["path"])
+        self.assertEquals({'domainId': [DOMAIN], 'repositoryId': [REPOSITORY]}, logs[-1]["arguments"])
+        r = RepositoryData.read(self.repofilepath) #really set action done
+        r.action=''
+        r.save(self.repofilepath)
+        self.assertEquals(17, self.sizeDumpDir())
+        deletedIds = set([
+            xpath(parse(open(join(self.dumpDir, '00016_delete.updateRequest'))), '//ucp:recordIdentifier/text()')[0],
+            xpath(parse(open(join(self.dumpDir, '00017_delete.updateRequest'))), '//ucp:recordIdentifier/text()')[0]
+        ])
+        self.assertEquals(set(['%s:oai:record:120' % REPOSITORY, '%s:oai:record:121' % REPOSITORY]), deletedIds)
+
+
+        logLen = len(self.getLogs())
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(logLen, len(self.getLogs()), 'Action is over, expect nothing more.')
 
     def testInvalidIgnoredUptoMaxIgnore(self):
-        self.startHarvester()
-        self.assertEquals(2, len(listdir(self.dumpDir)))
-        ids = open(join(self.harvesterStateDir, "adomain", "integrationtest.ids")).readlines()
+        maxIgnore = 5
+        self.controlHelper(action='ignoreAll')
+        nrOfDeleted = 2
+        r = RepositoryData.read(self.repofilepath)
+        r.maximumIgnore = "%s" % maxIgnore
+        r.save(self.repofilepath)
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(nrOfDeleted, self.sizeDumpDir())
+        ids = open(join(self.harvesterStateDir, DOMAIN, "%s.ids" % REPOSITORY)).readlines()
         self.assertEquals(0, len(ids))
-        ignoredIds = open(join(self.harvesterStateDir, "adomain", "integrationtest_ignored.ids")).readlines()
-        self.assertEquals(5, len(ignoredIds), ignoredIds)
-        ignoreDir = join(self.harvesterLogDir, "adomain", "ignored", "integrationtest")
-        self.assertEquals(5, len(listdir(ignoreDir)))
-        ignoreId1Error = open(join(ignoreDir, "recordID1")).read()
-        self.assertTrue('uploadId: "integrationtest:recordID1"', ignoreId1Error)
+        ignoredIds = open(join(self.harvesterStateDir, DOMAIN, "%s_ignored.ids" % REPOSITORY)).readlines()
+        self.assertEquals(maxIgnore, len(ignoredIds), ignoredIds)
+        ignoreDir = join(self.harvesterLogDir, DOMAIN, "ignored", REPOSITORY)
+        self.assertEquals(maxIgnore, len(listdir(ignoreDir)))
+        ignoreId1Error = open(join(ignoreDir, "oai:record:01")).read()
+        self.assertTrue('uploadId: "integrationtest:oai:record:01"', ignoreId1Error)
+        self.controlHelper(action='ignoreNothing')
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(nrOfDeleted + BATCHSIZE, self.sizeDumpDir()) 
+        ids = open(join(self.harvesterStateDir, DOMAIN, "%s.ids" % REPOSITORY)).readlines()
+        self.assertEquals(BATCHSIZE - nrOfDeleted, len(ids))
+        ignoredIds = open(join(self.harvesterStateDir, DOMAIN, "%s_ignored.ids" % REPOSITORY)).readlines()
+        self.assertEquals(0, len(ignoredIds), ignoredIds)
+        self.assertEquals(0, len(listdir(ignoreDir)))
+
+    def testHarvestToFilesystemTarget(self):
+        r = RepositoryData.read(self.repofilepath)
+        r.targetId = 'FILESYSTEM'
+        r.save(self.repofilepath)
+
+        self.startHarvester(repository=REPOSITORY)
+
+        self.assertEquals(8, len(listdir(join(self.filesystemDir, REPOSITORY))))
+        self.assertEquals(['%s:oai:record:%02d' % (REPOSITORY, i) for i in [3,6]],
+                [id.strip() for id in open(join(self.filesystemDir, 'deleted_records'))])
+
+    def testClearOnFilesystemTarget(self):
+        r = RepositoryData.read(self.repofilepath)
+        r.targetId = 'FILESYSTEM'
+        r.save(self.repofilepath)
+        self.startHarvester(repository=REPOSITORY)
+
+        r = RepositoryData.read(self.repofilepath)
+        r.action = 'clear'
+        r.save(self.repofilepath)
+
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(0, len(listdir(join(self.filesystemDir, REPOSITORY))))
+        self.assertEquals(set(['%s:oai:record:%02d' % (REPOSITORY, i) for i in range(1,11)]),
+                set([id.strip() for id in open(join(self.filesystemDir, 'deleted_records'))]))
+
+
+    def testHarvestWithError(self):
+        self.startHarvester(repository=REPOSITORY)
+        self.emptyDumpDir()
+
+        self.controlHelper(action='raiseExceptionOnIds', id=['%s:oai:record:12' % REPOSITORY]) 
+        self.startHarvester(repository=REPOSITORY)
+        successFullRecords=['oai:record:11']
+        self.assertEquals(len(successFullRecords), self.sizeDumpDir())
+        self.emptyDumpDir()
+
+        self.controlHelper(action='raiseExceptionOnIds', id=[]) 
+        self.startHarvester(repository=REPOSITORY)
+        secondBatchSize = 5
+        self.assertEquals(secondBatchSize, self.sizeDumpDir())
+
+    def testClearWithError(self):
+        self.startHarvester(repository=REPOSITORY)
+
+        r = RepositoryData.read(self.repofilepath)
+        r.action = 'clear'
+        r.save(self.repofilepath)
+        self.controlHelper(action='raiseExceptionOnIds', id=['%s:oai:record:05' % REPOSITORY]) 
+        self.emptyDumpDir()
+
+        self.startHarvester(repository=REPOSITORY)
+        successFullDeletes = [1,2,4]
+        deletesTodo = [5,7,8,9,10]
+        self.assertEquals(len(successFullDeletes), self.sizeDumpDir())
+
+        self.controlHelper(action='raiseExceptionOnIds', id=[]) 
+        self.emptyDumpDir()
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(len(deletesTodo), self.sizeDumpDir())
+
+    def testRefreshWithIgnoredRecords(self):
+        log = HarvesterLog(stateDir=join(self.harvesterStateDir, DOMAIN), logDir=join(self.harvesterLogDir, DOMAIN), name=REPOSITORY)
+        log.startRepository()
+        for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [1,2,120,121]]:
+            log.notifyHarvestedRecord(uploadId)
+            log.uploadIdentifier(uploadId)
+        for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [4,5,122,123,124]]:
+            log.notifyHarvestedRecord(uploadId)
+            log.deleteIdentifier(uploadId)
+        for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [7,8,125,126,127,128]]:
+            log.notifyHarvestedRecord(uploadId)
+            log.ignoreIdentifier(uploadId, 'ignored message')
+        log.endRepository('token')
+        log.close()
+        totalRecords = 15
+        oldUploads = 2
+        oldDeletes = 3
+        oldIgnoreds = 4
+
+        r = RepositoryData.read(self.repofilepath)
+        r.action='refresh'
+        r.save(self.repofilepath)
+
+        self.startHarvester(repository=REPOSITORY) # Smoot init
+        self.assertEquals(0, self.sizeDumpDir())
+        self.startHarvester(repository=REPOSITORY) # Smooth harvest
+        self.startHarvester(repository=REPOSITORY) # Smooth harvest
+        self.assertEquals(totalRecords, self.sizeDumpDir())
+        self.startHarvester(repository=REPOSITORY) # Smooth finish
+        self.assertEquals(totalRecords + oldUploads + oldIgnoreds, self.sizeDumpDir())
+        ignoredIds = open(join(self.harvesterStateDir, DOMAIN, "%s_ignored.ids" % REPOSITORY)).readlines()
+        self.assertEquals(0, len(ignoredIds), ignoredIds)
+        ids = open(join(self.harvesterStateDir, DOMAIN, "%s.ids" % REPOSITORY)).readlines()
+        self.assertEquals(13, len(ids), ids)
+
+    def testClearWithIgnoredRecords(self):
+        log = HarvesterLog(stateDir=join(self.harvesterStateDir, DOMAIN), logDir=join(self.harvesterLogDir, DOMAIN), name=REPOSITORY)
+        log.startRepository()
+        for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [1,2,120,121]]:
+            log.notifyHarvestedRecord(uploadId)
+            log.uploadIdentifier(uploadId)
+        for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [4,5,122,123,124]]:
+            log.notifyHarvestedRecord(uploadId)
+            log.deleteIdentifier(uploadId)
+        for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [7,8,125,126,127,128]]:
+            log.notifyHarvestedRecord(uploadId)
+            log.ignoreIdentifier(uploadId, 'ignored message')
+        log.endRepository('token')
+        log.close()
+        oldUploads = 4
+        oldDeletes = 5
+        oldIgnoreds = 6
+
+        r = RepositoryData.read(self.repofilepath)
+        r.action='clear'
+        r.save(self.repofilepath)
+        
+        self.startHarvester(repository=REPOSITORY)
+        self.assertEquals(oldUploads+oldIgnoreds, self.sizeDumpDir())
+        ignoredIds = open(join(self.harvesterStateDir, DOMAIN, "%s_ignored.ids" % REPOSITORY)).readlines()
+        self.assertEquals(0, len(ignoredIds), ignoredIds)
+        ids = open(join(self.harvesterStateDir, DOMAIN, "%s.ids" % REPOSITORY)).readlines()
+        self.assertEquals(0, len(ids), ids)
+
+    def emptyDumpDir(self):
+        system('rm %s/*' % self.dumpDir)
+
+    def sizeDumpDir(self):
+        return len(listdir(self.dumpDir))
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/integration/helperserver.py version_7.1/test/integration/helperserver.py
--- version_7.0.3/test/integration/helperserver.py	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/test/integration/helperserver.py	2011-06-22 16:03:31.000000000 +0200
@@ -0,0 +1,214 @@
+#!/usr/bin/env python2.5
+## begin license ##
+#
+#    Meresco Components are components to build searchengines, repositories
+#    and archives, based on Meresco Core.
+#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+#    Copyright (C) 2007-2009 SURF Foundation. http://www.surf.nl
+#    Copyright (C) 2007-2009, 2011 Stichting Kennisnet Ict op school.
+#       http://www.kennisnetictopschool.nl
+#    Copyright (C) 2007 SURFnet. http://www.surfnet.nl
+#    Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+#
+#    This file is part of Meresco Components.
+#
+#    Meresco Components is free software; you can redistribute it and/or modify
+#    it under the terms of the GNU General Public License as published by
+#    the Free Software Foundation; either version 2 of the License, or
+#    (at your option) any later version.
+#
+#    Meresco Components is distributed in the hope that it will be useful,
+#    but WITHOUT ANY WARRANTY; without even the implied warranty of
+#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#    GNU General Public License for more details.
+#
+#    You should have received a copy of the GNU General Public License
+#    along with Meresco Components; if not, write to the Free Software
+#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+#
+## end license ##
+from __future__ import with_statement
+
+from mocksaharaget import MockSaharaGet
+
+from glob import glob
+from sys import path, argv, exit
+
+from weightless.io import Reactor
+from sys import stdout
+from os.path import abspath, dirname, join, isdir, basename
+from os import makedirs, remove
+from meresco.components.http import ObservableHttpServer, PathFilter, FileServer, StringServer
+from meresco.components.http.utils import ContentTypePlainText, okPlainText, ContentTypeXml
+from meresco.components.sru.srurecordupdate import RESPONSE_XML, DIAGNOSTIC_XML, escapeXml, bind_string
+from meresco.components import StorageComponent
+from meresco.oai import OaiPmh, OaiJazz
+from meresco.core import Observable, be
+from re import compile
+from traceback import format_exc
+
+mydir = dirname(abspath(__file__))
+notWordCharRE = compile('\W+')
+
+class InvalidDataException(Exception):
+    pass
+
+class Dump(object):
+    def __init__(self, dumpdir):
+        self._dumpdir = dumpdir
+        self._number = self._findLastNumber()
+        self._ignoreAll = False
+        self._raiseExceptionOnIds = set()
+
+    def handleRequest(self, Body='', **kwargs):
+        yield '\r\n'.join(['HTTP/1.0 200 Ok', 'Content-Type: text/xml, charset=utf-8\r\n', ''])
+        try:
+            updateRequest = bind_string(Body).updateRequest
+            if self._ignoreAll and str(updateRequest.action) == "info:srw/action/1/replace":
+                raise InvalidDataException('Data not valid.')
+            recordId = str(updateRequest.recordIdentifier)
+            if recordId in self._raiseExceptionOnIds:
+                raise Exception('ERROR')
+            self._number +=1
+            filename = '%05d_%s.updateRequest' %(self._number, str(updateRequest.action).rsplit('/')[-1])
+            with open(join(self._dumpdir, filename), 'w') as f:
+                stdout.flush()
+                updateRequest.xml(f)
+            answer = RESPONSE_XML % {
+                "operationStatus": "success",
+                "diagnostics": ""}
+        except InvalidDataException, e:
+            answer = RESPONSE_XML % {
+                "operationStatus": "fail",
+                "diagnostics": DIAGNOSTIC_XML % {
+                    'uri': 'info:srw/diagnostic/12/12',
+                    'details': escapeXml(str(e)),
+                    'message': 'Invalid data:  record rejected'}}
+        except Exception, e:
+            answer = RESPONSE_XML % {
+                "operationStatus": "fail",
+                "diagnostics": DIAGNOSTIC_XML % {
+                    'uri': 'info:srw/diagnostic/12/1', 
+                    'details': escapeXml(format_exc()), 
+                    'message': 'Invalid component:  record rejected'}}
+        import sys
+        sys.stdout.flush()
+        yield answer
+
+    def _findLastNumber(self):
+        return max([int(basename(f)[:5]) for f in glob(join(self._dumpdir, '*.updateRequest'))]+[0])
+
+    def reset(self):
+        self._ignoreAll = False
+        for f in glob(join(self._dumpdir, '*.updateRequest')):
+            remove(f)
+        self._number = 0
+        self._raiseExceptionOnIds = set()
+
+    def ignoreAll(self):
+        self._ignoreAll = True
+
+    def ignoreNothing(self):
+        self._ignoreAll = False
+
+    def raiseExceptionOnIds(self, ids):
+        self._raiseExceptionOnIds = set(ids)
+
+class Control(Observable):
+    def handleRequest(self, arguments, **kwargs):
+        action = arguments.get('action', [None])[0]
+        yield okPlainText
+        if action == "reset":
+            self.do.reset()
+        if action == "raiseExceptionOnIds":
+            self.do.raiseExceptionOnIds(arguments.get('id',[]))
+        if action == "ignoreNothing":
+            self.do.ignoreNothing()
+        if action == "ignoreAll":
+            self.do.ignoreAll()
+        yield "DONE"
+
+logLines = []
+class Log(Observable):
+    def handleRequest(self, RequestURI, **kwargs):
+        logLines.append(RequestURI)
+        return self.all.handleRequest(RequestURI=RequestURI, **kwargs)
+
+    def reset(self):
+        del logLines[:]
+
+    def logs(self):
+        return logLines
+
+class RetrieveLog(Observable):
+    def handleRequest(self, **kwargs):
+        yield okPlainText
+        yield '\n'.join(self.any.logs())
+
+
+def main(reactor, portNumber, dir):
+    dumpdir = join(dir, 'dump')
+    isdir(dumpdir) or makedirs(dumpdir)
+    dump = Dump(dumpdir)
+    oaiStorage = StorageComponent(join(dir, 'storage'))
+    oaiJazz = OaiJazz(join(dir, 'oai'))
+    server = be(
+        (Observable(),
+            (ObservableHttpServer(reactor, portNumber),
+                (PathFilter("/dump"),
+                    (dump,)
+                ),
+                (PathFilter("/control"),
+                    (Control(),
+                        (dump,),
+                        (Log(),),
+                    )
+                ),
+                (PathFilter('/oai'),
+                    (Log(),
+                        (OaiPmh(repositoryName="Oai Test Server", adminEmail="admin@example.org", batchSize=10),
+                            (oaiStorage,),
+                            (oaiJazz,),
+                        )
+                    )
+                ),
+                (PathFilter("/saharaget"),
+                    (MockSaharaGet(),)
+                ),
+                (PathFilter("/log"),
+                    (RetrieveLog(),
+                        (Log(),)
+                    )
+                ),
+                (PathFilter("/setactiondone"),
+                    (Log(),
+                        (StringServer('<success>true</success>', ContentTypeXml),)
+                    )
+                ),
+                (PathFilter("/ready"),
+                    (StringServer('yes', ContentTypePlainText),)
+                )
+            )
+        )
+    )
+    server.once.observer_init()
+    for i in range(1,16):
+        identifier = 'oai:record:%02d' % i
+        oaiStorage.add(identifier=identifier, partname='oai_dc', data='''<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><dc:identifier>%s</dc:identifier></oai_dc:dc>''' % identifier)
+        oaiJazz.addOaiRecord(identifier=identifier, metadataFormats=[('oai_dc', 'http://www.openarchives.org/OAI/2.0/oai_dc.xsd', 'http://www.openarchives.org/OAI/2.0/oai_dc/')])
+        if i in [3,6]:
+            oaiJazz.delete(identifier=identifier)
+
+if __name__== '__main__':
+    args = argv[1:]
+    if len(args) != 2:
+        print "Usage %s <portnumber> <dir>" % argv[0]
+        exit(1)
+    portNumber = int(args[0])
+    dir = args[1]
+    reactor = Reactor()
+    main(reactor, portNumber, dir)
+    print 'Ready to rumble the dumpserver at', portNumber
+    print '  - dumps are written to', join(dir, 'dump')
+    stdout.flush()
+    reactor.loop()
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/integration/integrationtestcase.py version_7.1/test/integration/integrationtestcase.py
--- version_7.0.3/test/integration/integrationtestcase.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/integration/integrationtestcase.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,30 +1,32 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from __future__ import with_statement
@@ -33,7 +35,7 @@
 from os import system, listdir, makedirs
 from sys import stdout
 
-from utils import postRequest
+from utils import postRequest, getRequest
 
 from cq2utils import CQ2TestCase
 from random import randint
@@ -43,6 +45,8 @@
 from signal import SIGTERM
 from os import waitpid, kill, WNOHANG
 from urllib import urlopen, urlencode
+from urlparse import urlparse
+from cgi import parse_qs
 from shutil import copytree
 
 from meresco.components import readConfig
@@ -51,8 +55,8 @@
 
 mypath = dirname(abspath(__file__))
 binDir = join(dirname(dirname(mypath)), 'bin')
-documentationPath = join(dirname(dirname(mypath)), 'doc')
-harvesterDir = dirname(dirname(dirname(abspath(__file__))))
+examplesPath = join(dirname(dirname(mypath)), 'examples')
+harvesterDir = dirname(dirname(mypath))
 
 if not isdir(binDir):
     binDir = '/usr/bin'
@@ -74,24 +78,32 @@
         CQ2TestCase.setUp(self)
         global state
         self.state = state
-        urlopen("http://localhost:%s/starttest?name=%s" % (self.helperServerPortNumber, self.id()))
+        self.controlHelper(action='reset')
+
+    def controlHelper(self, action, **kwargs):
+        args = {'action':action}
+        args.update(kwargs)
+        urlopen("http://localhost:%s/control?%s" % (self.helperServerPortNumber, urlencode(args,doseq=True)))
 
     def __getattr__(self, name):
         if name.startswith('_'):
             raise AttributeError(name)
         return getattr(self.state, name)
 
-    def startHarvester(self):
+    def startHarvester(self, repository=None, verbose=False):
         stdoutfile = join(self.integrationTempdir, "stdouterr-harvester.log")
         stdouterrlog = open(stdoutfile, 'w')
+        if verbose:
+            stdouterrlog = stdout
+        additionalArgs = ['--repository=%s'%repository] if repository else []
         harvesterProcessInfo = Popen(
-            args=["python", join(self.integrationTempdir, "start-integrationtest-harvester.py"), "-d", "adomain", "--logDir=%s" % self.harvesterLogDir, "--stateDir=%s" % self.harvesterStateDir], 
-            cwd=self.integrationTempdir,
+            args=[join(binDir, "meresco-harvester"), "-d", "adomain", "--logDir=%s" % self.harvesterLogDir, "--stateDir=%s" % self.harvesterStateDir, "--saharaurl=http://localhost:%s" % self.helperServerPortNumber] + additionalArgs, 
+            cwd=binDir,
             env={'PYTHONPATH': harvesterDir, 'LANG': 'en_US.UTF-8'},
             stdout=stdouterrlog,
             stderr=stdouterrlog)
-        print "Harvester PID", harvesterProcessInfo.pid
         waitpid(harvesterProcessInfo.pid, 0)
+        stdouterrlog.flush()
 
 class IntegrationState(object):
     def __init__(self, stateName, fastMode):
@@ -103,14 +115,16 @@
         self.helperServerPortNumber = PortNumberGenerator.next()
         self.harvesterInternalServerPortNumber = PortNumberGenerator.next()
 
-        self.dumpDir = join(self.integrationTempdir, 'dump')
+        self.helperDir = join(self.integrationTempdir, 'helper')
+        self.dumpDir = join(self.helperDir, 'dump')
         self.harvesterLogDir = join(self.integrationTempdir, "log")
         self.harvesterStateDir = join(self.integrationTempdir, "state")
 
         copytree("integration-data", self.integrationTempdir)
-        fileSubstVars(join(self.integrationTempdir, "data", "DUMP.target"), dumpPortNumber=self.helperServerPortNumber)
-        fileSubstVars(join(self.integrationTempdir, "data", "integration.test.repository"), helperServerPortNumber=self.helperServerPortNumber)
-        config = readConfig(join(documentationPath, 'harvester.config'))
+        fileSubstVars(join(self.integrationTempdir, "data", "SRUUPDATE.target"), helperServerPortNumber=self.helperServerPortNumber)
+        fileSubstVars(join(self.integrationTempdir, "data", "FILESYSTEM.target"), integrationTempdir=self.integrationTempdir)
+        fileSubstVars(join(self.integrationTempdir, "data", "adomain.integrationtest.repository"), helperServerPortNumber=self.helperServerPortNumber)
+        config = readConfig(join(examplesPath, 'harvester.config'))
         
         # test example config has neccessary parameters
         def setConfig(config, parameter, value):
@@ -119,8 +133,8 @@
         setConfig(config, 'portNumber', self.harvesterInternalServerPortNumber)
         setConfig(config, 'saharaUrl', "http://localhost:%s" % self.helperServerPortNumber)
         setConfig(config, 'dataPath', join(self.integrationTempdir, 'data'))
-        setConfig(config, 'statePath', join(self.integrationTempdir, 'state'))
-        setConfig(config, 'logPath', join(self.integrationTempdir, 'log'))
+        setConfig(config, 'statePath', self.harvesterStateDir)
+        setConfig(config, 'logPath', self.harvesterLogDir)
 
         self._writeConfig(config, 'harvester')
 
@@ -138,7 +152,7 @@
         stdoutfile = join(self.integrationTempdir, "stdouterr-helper.log")
         stdouterrlog = open(stdoutfile, 'w')
         processInfo = Popen(
-            args=["python", join(self.integrationTempdir, "helperserver.py"), str(self.helperServerPortNumber), self.dumpDir], 
+            args=["python", join(mypath, "helperserver.py"), str(self.helperServerPortNumber), self.helperDir], 
             env={'PYTHONPATH': harvesterDir, 'LANG': 'en_US.UTF-8'},
             cwd=self.integrationTempdir, 
             stdout=stdouterrlog,
@@ -155,7 +169,7 @@
         stdouterrlog = open(stdoutfile, 'w')
         configFile = join(self.integrationTempdir, 'harvester.config') 
         processInfo = Popen(
-            args=[join(binDir, "start-harvester-internal-server"), configFile], 
+            args=[join(binDir, "meresco-harvester-internal-server"), configFile], 
             env={'PYTHONPATH': harvesterDir, 'LANG': 'en_US.UTF-8'},
             cwd=binDir,
             stdout=stdouterrlog,
@@ -167,6 +181,17 @@
                 serviceReadyUrl='http://localhost:%s/info/version' % self.harvesterInternalServerPortNumber, 
                 stdoutfile=stdoutfile)
 
+    def getLogs(self):
+        header, result = getRequest(self.helperServerPortNumber, '/log', {}, parse=False)
+        return list(self._getLogs(result))
+
+    @staticmethod
+    def _getLogs(result):
+        for line in (l for l in result.split('\n') if l.strip()):
+            p = urlparse(line)
+            yield dict(path=p.path, arguments=parse_qs(p.query))
+
+
     def _check(self, serverProcess, serviceName, serviceReadyUrl, stdoutfile):
         stdoutWrite("Starting service '%s', for state '%s' : v" % (serviceName, self.stateName))
         done = False
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/integration/internalservertest.py version_7.1/test/integration/internalservertest.py
--- version_7.0.3/test/integration/internalservertest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/integration/internalservertest.py	2011-06-22 16:03:31.000000000 +0200
@@ -36,6 +36,7 @@
 def xpath(node, xpath):
     return node.xpath(xpath, namespaces={'s': 'http://sahara.cq2.org/xsd/saharaget.xsd'})
 
+REPOSITORY = 'integrationtest'
 class InternalServerTest(IntegrationTestCase):
 
     def setUp(self):
@@ -44,21 +45,24 @@
         system("rm -rf %s" % self.harvesterLogDir)
         system("rm -rf %s" % self.harvesterStateDir)
 
-    def testListAllRepositories(self):
-        self.startHarvester()
+    def testListIgnoredRecordsForOneRepository(self):
+        self.controlHelper(action='ignoreAll')
+        self.startHarvester(repository=REPOSITORY)
         header, result = getRequest(self.harvesterInternalServerPortNumber, '/ignored', {'domainId': 'adomain', 'repositoryId': 'integrationtest'}, parse='lxml')
-        self.assertEquals(["recordID7", "recordID5", "recordID4", "recordID2", "recordID1"], result.xpath("/div/table/tr/td[@class='link']/a/text()"))
-        self.assertEquals("/page/ignoredRecord/?recordId=recordID7&domainId=adomain&repositoryId=integrationtest", result.xpath("/div/table/tr/td[@class='link']/a")[0].attrib['href'])
+        self.assertEquals(['oai:record:07', 'oai:record:05', 'oai:record:04', 'oai:record:02', 'oai:record:01'], result.xpath("/div/table/tr/td[@class='link']/a/text()"))
+        self.assertEquals("/page/ignoredRecord/?recordId=oai%3Arecord%3A07&domainId=adomain&repositoryId=integrationtest", result.xpath("/div/table/tr/td[@class='link']/a")[0].attrib['href'])
         self.assertEquals("/page/showHarvesterStatus/show?domainId=adomain&repositoryId=integrationtest", result.xpath("/div/p/a/@href")[0])
 
     def testViewIgnoredRecord(self):
-        self.startHarvester()
-        header, result = getRequest(self.harvesterInternalServerPortNumber, '/ignoredRecord', {'domainId': 'adomain', 'repositoryId': 'integrationtest', 'recordId': 'recordID2'}, parse='lxml')
-        self.assertEquals("Repository integrationtest - Record recordID2", result.xpath("//h3/text()")[0])
+        self.controlHelper(action='ignoreAll')
+        self.startHarvester(repository=REPOSITORY)
+        header, result = getRequest(self.harvesterInternalServerPortNumber, '/ignoredRecord', {'domainId': 'adomain', 'repositoryId': 'integrationtest', 'recordId': 'oai:record:02'}, parse='lxml')
+        self.assertEquals("Repository integrationtest - Record oai:record:02", result.xpath("//h3/text()")[0])
         self.assertEquals("/page/ignored/?domainId=adomain&repositoryId=integrationtest", result.xpath("/div/p/a/@href")[0])
 
     def testGetStatus(self):
-        self.startHarvester()
+        self.controlHelper(action='ignoreAll')
+        self.startHarvester(repository=REPOSITORY)
         header, result = getRequest(self.harvesterInternalServerPortNumber, '/getStatus', {'domainId': 'adomain', 'repositoryId': 'integrationtest'}, parse='lxml')
         self.assertEquals("GetStatus", xpath(result, "/s:saharaget/s:request/s:verb/text()")[0])
         self.assertEquals("adomain", xpath(result, "/s:saharaget/s:request/s:domainId/text()")[0])
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/integration/mocksaharaget.py version_7.1/test/integration/mocksaharaget.py
--- version_7.0.3/test/integration/mocksaharaget.py	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/test/integration/mocksaharaget.py	2011-06-22 16:03:31.000000000 +0200
@@ -0,0 +1,126 @@
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+from time import gmtime, strftime
+from slowfoot.wrappers import wrapp
+from slowfoot.binderytools import bind_string, bind_file
+
+def buildResponseDateXml():
+    return """<responseDate>%s</responseDate>""" % strftime('%Y-%m-%dT%H:%M:%SZ', gmtime())
+
+def GetRepositories(domainId, **kwargs):
+    responseDateXml = buildResponseDateXml()
+    repositoryXml = ''
+    for f in (f for f in listdir('data') if f.endswith('.repository')):
+        repositoryXml += readFile(f).repository.xml()
+    xml="""<?xml version="1.0" encoding="UTF-8"?>
+<saharaget xmlns="http://sahara.cq2.org/xsd/saharaget.xsd">
+ %(responseDateXml)s
+ <request>
+     <verb>GetRepositories</verb>
+     <domainId>%(domainId)s</domainId>
+ </request>
+ <GetRepositories>
+    %(repositoryXml)s
+ </GetRepositories>
+</saharaget>""" % locals()
+    return wrapp(bind_string(xml))
+
+def GetRepository(domainId, repositoryId, **kwargs):
+    responseDateXml = buildResponseDateXml()
+    repositoryXml = readFile('%s.%s.repository' % (domainId, repositoryId)).repository.xml()
+    xml="""<?xml version="1.0" encoding="UTF-8"?>
+<saharaget xmlns="http://sahara.cq2.org/xsd/saharaget.xsd">
+ %(responseDateXml)s
+ <request>
+     <verb>GetRepository</verb>
+     <domainId>%(domainId)s</domainId>
+     <repositoryId>%(repositoryId)s</repositoryId>
+ </request>
+ <GetRepository>
+    %(repositoryXml)s
+ </GetRepository>
+</saharaget>""" % locals()
+    return wrapp(bind_string(xml))
+
+def GetTarget(domainId, targetId, **kwargs):
+    responseDateXml = buildResponseDateXml()
+    targetXml = readFile("%s.target" % targetId).target.xml()
+    xml="""<?xml version="1.0" encoding="UTF-8"?>
+<saharaget xmlns="http://sahara.cq2.org/xsd/saharaget.xsd">
+ %(responseDateXml)s
+ <request>
+     <verb>GetTarget</verb>
+     <domainId>%(domainId)s</domainId>
+     <targetId>%(targetId)s</targetId>
+ </request>
+ <GetTarget>
+    %(targetXml)s
+ </GetTarget>
+</saharaget>""" % locals()
+    return wrapp(bind_string(xml))
+
+def GetMapping(domainId, mappingId, **kwargs):
+    responseDateXml = buildResponseDateXml()
+    mappingXml = readFile("%s.mapping" % mappingId).mapping.xml()
+    xml="""<?xml version="1.0" encoding="UTF-8"?>
+<saharaget xmlns="http://sahara.cq2.org/xsd/saharaget.xsd">
+ %(responseDateXml)s
+ <request>
+     <verb>GetMapping</verb>
+     <domainId>%(domainId)s</domainId>
+     <mappingId>%(mappingId)s</mappingId>
+ </request>
+ <GetMapping>
+    %(mappingXml)s
+ </GetMapping>
+</saharaget>""" % locals()
+    return wrapp(bind_string(xml))
+
+def readFile(fileName):
+    return bind_file("data/" + fileName)
+
+def read(self, verb, **kwargs):
+    print verb, kwargs
+    return globals()[verb](**kwargs)
+
+class MockSaharaGet(object):
+
+    def handleRequest(self, arguments, **kwargs):
+        yield '\r\n'.join(['HTTP/1.0 200 Ok', 'Content-Type: text/xml, charset=utf-8\r\n', ''])
+
+        verb = arguments.get('verb', [None])[0]
+        domainId = arguments.get('domainId', [None])[0]
+        repositoryId = arguments.get('repositoryId', [None])[0]
+        targetId = arguments.get('targetId', [None])[0]
+        mappingId = arguments.get('mappingId', [None])[0]
+        yield read(**locals()).xml()
+
+
Only in version_7.0.3/test/integration-data/data: 99ff846d-f05d-4bb8-be3f-c1b5039b50e5.mapping
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/integration-data/data/adomain.integrationtest.repository version_7.1/test/integration-data/data/adomain.integrationtest.repository
--- version_7.0.3/test/integration-data/data/adomain.integrationtest.repository	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/test/integration-data/data/adomain.integrationtest.repository	2011-06-22 16:03:31.000000000 +0200
@@ -0,0 +1,15 @@
+<?xml version="1.0"?>
+<repository>
+  <id>integrationtest</id>
+  <repositoryGroupId>IntegrationTest</repositoryGroupId>
+  <use>true</use>
+  <complete></complete>
+  <action></action>
+  <baseurl>http://localhost:${helperServerPortNumber}/oai</baseurl>
+  <set></set>
+  <collection>Integration</collection>
+  <targetId>SRUUPDATE</targetId>
+  <metadataPrefix>oai_dc</metadataPrefix>
+  <mappingId>MAPPING</mappingId>
+  <maximumIgnore>5</maximumIgnore>
+</repository>
Only in version_7.0.3/test/integration-data/data: DUMP.target
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/integration-data/data/FILESYSTEM.target version_7.1/test/integration-data/data/FILESYSTEM.target
--- version_7.0.3/test/integration-data/data/FILESYSTEM.target	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/test/integration-data/data/FILESYSTEM.target	2011-06-22 16:03:31.000000000 +0200
@@ -0,0 +1,9 @@
+<?xml version="1.0"?>
+<target>
+  <id>FILESYSTEM</id>
+  <name>FILESYSTEM</name>
+  <username></username>
+  <targetType>filesystem</targetType>
+  <path>${integrationTempdir}/filesystem</path>
+  <oaiEnvelope>false</oaiEnvelope>
+</target>
Only in version_7.0.3/test/integration-data/data: integration.test.repository
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/integration-data/data/MAPPING.mapping version_7.1/test/integration-data/data/MAPPING.mapping
--- version_7.0.3/test/integration-data/data/MAPPING.mapping	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/test/integration-data/data/MAPPING.mapping	2011-06-22 16:03:31.000000000 +0200
@@ -0,0 +1,35 @@
+<?xml version="1.0"?>
+<mapping>
+  <id>MAPPING</id>
+  <name>default</name>
+  <description>This mapping is what has become the default mapping for most Meresco based projects.
+</description>
+  <code>upload.parts['metadata'] = input.metadata.xml()
+
+upload.parts['header'] = input.header.xml()
+
+upload.parts['meta'] = """&lt;meta xmlns="http://meresco.org/namespace/harvester/meta"&gt;
+  &lt;upload&gt;&lt;id&gt;%(id)s&lt;/id&gt;&lt;/upload&gt;
+  &lt;record&gt;
+    &lt;id&gt;%(recordId)s&lt;/id&gt;
+  &lt;/record&gt;
+  &lt;repository&gt;
+    &lt;id&gt;%(repository)s&lt;/id&gt;
+    &lt;set&gt;%(set)s&lt;/set&gt;
+    &lt;baseurl&gt;%(baseurl)s&lt;/baseurl&gt;
+    &lt;repositoryGroupId&gt;%(repositoryGroupId)s&lt;/repositoryGroupId&gt;
+    &lt;metadataPrefix&gt;%(metadataPrefix)s&lt;/metadataPrefix&gt;
+    &lt;collection&gt;%(collection)s&lt;/collection&gt;
+  &lt;/repository&gt;
+&lt;/meta&gt;""" % dict([(k,xmlEscape(v)) for k,v in {
+  'id': upload.id,
+  'set': input.repository.set,
+  'baseurl': input.repository.baseurl,
+  'repositoryGroupId':  input.repository.repositoryGroupId,
+  'repository': input.repository.id,
+  'metadataPrefix': input.repository.metadataPrefix,
+  'collection': input.repository.collection,
+  'recordId': input.header.identifier,
+}.items()])
+</code>
+</mapping>
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/integration-data/data/SRUUPDATE.target version_7.1/test/integration-data/data/SRUUPDATE.target
--- version_7.0.3/test/integration-data/data/SRUUPDATE.target	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/test/integration-data/data/SRUUPDATE.target	2011-06-22 16:03:31.000000000 +0200
@@ -0,0 +1,10 @@
+<?xml version="1.0"?>
+<target>
+  <id>SRUUPDATE</id>
+  <name>SRUUPDATE</name>
+  <username></username>
+  <port>${helperServerPortNumber}</port>
+  <targetType>sruUpdate</targetType>
+  <path>/dump</path>
+  <baseurl>localhost</baseurl>
+</target>
Only in version_7.0.3/test/integration-data/files: listrecords.oai
Only in version_7.0.3/test/integration-data: helperserver.py
Only in version_7.0.3/test/integration-data: start-integrationtest-harvester.py
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/_integrationtest.py version_7.1/test/_integrationtest.py
--- version_7.0.3/test/_integrationtest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/_integrationtest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,4 +1,33 @@
 #!/usr/bin/env python2.5
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
 
 from os import system                               #DO_NOT_DISTRIBUTE
 from glob import glob                               #DO_NOT_DISTRIBUTE
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/mappingtest.py version_7.1/test/mappingtest.py
--- version_7.0.3/test/mappingtest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/mappingtest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,36 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl 
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 import unittest
@@ -67,19 +69,20 @@
         datamap = Mapping('mappingId')
         datamap.code = """
 upload.parts['record']="<somexml/>"
-logger.error('Iets om te zeuren')
+logger.logError('Iets om te zeuren')
 """
         record = parse_xml("""<record><header><identifier>oai:ident:321</identifier><datestamp>2005-08-29T07:08:09Z</datestamp></header><metadata></metadata><about/></record>""").record
         stream = StringIO()
         logger = StreamEventLogger(stream)
-        upload = datamap.createUpload(TestRepository(), record, logger)
+        datamap.addObserver(logger)
+        upload = datamap.createUpload(TestRepository(), record)
         self.assertEquals('ERROR\t[]\tIets om te zeuren\n',stream.getvalue()[26:])
 
     def testNoLogging(self):
         datamap = Mapping('mappingId')
         datamap.code = """
 upload.parts['record']="<somexml/>"
-logger.error('Iets om te zeuren')
+logger.logError('Iets om te zeuren')
 """
         record = parse_xml("""<record><header><identifier>oai:ident:321</identifier><datestamp>2005-08-29T07:08:09Z</datestamp></header><metadata></metadata><about/></record>""").record
         upload = datamap.createUpload(TestRepository(), record)
@@ -104,9 +107,10 @@
 
         stream = StringIO()
         logger = StreamEventLogger(stream)
+        datamap.addObserver(logger)
         try:
             record = parse_xml("""<record><header><identifier>oai:ident:321</identifier><datestamp>2005-08-29T07:08:09Z</datestamp></header><metadata></metadata><about/></record>""").record
-            datamap.createUpload(TestRepository(), record, logger, doAsserts=True)
+            datamap.createUpload(TestRepository(), record, doAsserts=True)
             self.fail()
         except DataMapAssertionException, ex:
             self.assertEquals('ERROR\t[repository.id:oai:ident:321]\tAssertion: 1 not equal 2\n',stream.getvalue()[26:])
@@ -120,7 +124,7 @@
 
         stream = StringIO()
         logger = StreamEventLogger(stream)
-        datamap.createUpload(TestRepository(),wrapp(''), logger, doAsserts=False)
+        datamap.createUpload(TestRepository(),wrapp(''), doAsserts=False)
         self.assertEquals('',stream.getvalue())
 
     def assertPart(self, expected, partname, code):
@@ -146,7 +150,8 @@
         record = parse_xml("""<record><header><identifier>oai:ident:321</identifier><datestamp>2005-08-29T07:08:09Z</datestamp></header><metadata></metadata><about/></record>""").record
         stream = StringIO()
         logger = StreamEventLogger(stream)
-        upload = datamap.createUpload(TestRepository(), record, logger)
+        datamap.addObserver(logger)
+        upload = datamap.createUpload(TestRepository(), record)
         self.assertTrue(upload.skip)
         self.assertEquals("SKIP\t[repository.id:oai:ident:321]\tDon't like it here.\n", stream.getvalue()[26:])
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/mockoairequest.py version_7.1/test/mockoairequest.py
--- version_7.0.3/test/mockoairequest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/mockoairequest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,3 +1,33 @@
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
 from slowfoot import binderytools
 from os.path import join
 from urllib import urlencode
Only in version_7.0.3/test: mocksaharaget.py
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/oairequesttest.py version_7.1/test/oairequesttest.py
--- version_7.0.3/test/oairequesttest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/oairequesttest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 import unittest
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/onlineharvesttest.py version_7.1/test/onlineharvesttest.py
--- version_7.0.3/test/onlineharvesttest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/onlineharvesttest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,36 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl 
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Stichting Kennisnet Ict http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 import unittest
@@ -37,69 +39,67 @@
 from meresco.harvester.mapping import Mapping, Upload, DataMapAssertionException, DEFAULT_DC_CODE
 from slowfoot.wrappers import wrapp
 import os
+from cq2utils import CallTrace
 
 class OnlineHarvestTest(unittest.TestCase):
     def setUp(self):
         self.mock_createUpload_exception = ''
         self._testpath = os.path.realpath(os.path.curdir)
+        self.output = StringIO()
+        self.harvest = OnlineHarvest(self.output, 'saharaUrl')
+        self.saharaGet = CallTrace('SaharaGet')
+        self.harvest._saharaGet = self.saharaGet
 
     def testRealMapping(self):
-        output = StringIO()
         mapping = Mapping('mappingId')
         mapping.code = DEFAULT_DC_CODE
         data = 'file://%s/mocktud/00002.xml' % self._testpath
-        harvest = OnlineHarvest(output)
-        harvest.performMapping(mapping, data)
-        self.assertEquals(3,output.getvalue().count('upload.id='))
+        self.saharaGet.returnValues['getMapping'] = mapping
+        self.harvest.performMapping(mapping, data)
+        self.assertEquals(3,self.output.getvalue().count('upload.id='))
 
     def testMapping(self):
-        output = StringIO()
-        mapping = self
+        mapping = CallTrace('mapping')
+        self.saharaGet.returnValues['getMapping'] = mapping
         data = 'file://%s/mocktud/00002.xml' % self._testpath
-        harvest = OnlineHarvest(output)
-        harvest.performMapping(mapping, data)
-        self.assertEquals(True, self.createUpload_args['doAssertions'])
+        self.harvest.performMapping(mapping, data)
+        self.assertEquals(['addObserver', 'mappingInfo', 'createUpload', 'createUpload', 'createUpload'], [m.name for m in mapping.calledMethods])
+        for createUploadMethod in mapping.calledMethods[2:]:
+            self.assertTrue(createUploadMethod.kwargs['doAsserts'])
 
     def testMappingWithDeletedRecord(self):
-        output = StringIO()
         mapping = Mapping('mappingId')
         mapping.code = DEFAULT_DC_CODE
+        mapping.name = 'My Mapping'
         data = 'file://%s/mocktud/00003.xml' % self._testpath
-        harvest = OnlineHarvest(output)
-        harvest.performMapping(mapping, data)
-        self.assertEquals("upload.id=repository.id:oai:tudelft.nl:107087\nDELETED", output.getvalue().strip())
+        self.saharaGet.returnValues['getMapping'] = mapping
+        self.harvest.performMapping(mapping, data)
+        self.assertEquals("Mappingname 'My Mapping'\n\nupload.id=repository.id:oai:tudelft.nl:107087\nDELETED", self.output.getvalue().strip())
 
     def testMappingRaisesDataMapAssertionException(self):
-        output = StringIO()
-        mapping = self
-        self.mock_createUpload_exception=DataMapAssertionException('O no, it\'s a snake!!')
+        mapping = CallTrace('mapping')
+        calls = []
+        def createUpload(*args, **kwargs):
+            calls.append(1)
+            if len(calls) == 1:
+                raise DataMapAssertionException('O no, it\'s a snake!!')
+            return Upload('id')
+        mapping.methods['createUpload'] = createUpload
+        self.saharaGet.returnValues['getMapping'] = mapping
         data = 'file://%s/mocktud/00002.xml' % self._testpath
-        harvest = OnlineHarvest(output)
-        harvest.performMapping(mapping, data)
-        self.assertEquals(2,output.getvalue().count('upload.id='))
+        self.harvest.performMapping('mappingId', data)
+        self.assertEquals(2,self.output.getvalue().count('upload.id='))
 
     def testMappingRaisesException(self):
-        output = StringIO()
-        mapping = self
-        self.mock_createUpload_exception=Exception('Mushroom, mushroom')
+        mapping = CallTrace('mapping')
+        self.saharaGet.returnValues['getMapping'] = mapping
+        mapping.exceptions['createUpload'] = Exception('Mushroom, mushroom')
         data = 'file://%s/mocktud/00002.xml' % self._testpath
-        harvest = OnlineHarvest(output)
         try:
-            harvest.performMapping(mapping, data)
+            self.harvest.performMapping(mapping, data)
             self.fail()
         except Exception, ex:
             self.assertEquals('Mushroom, mushroom', str(ex))
-        self.assertEquals('',output.getvalue())
+        self.assertEquals('\n',self.output.getvalue())
 
 
-
-    #mocking
-    def createUpload(self, repository, record, logger=None, doAssertions=False):
-        self.createUpload_args={'doAssertions':doAssertions}
-        if self.mock_createUpload_exception:
-            ex = self.mock_createUpload_exception
-            self.mock_createUpload_exception = None
-            raise ex
-        upload = Upload()
-        return upload
-
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/repositorystatustest.py version_7.1/test/repositorystatustest.py
--- version_7.0.3/test/repositorystatustest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/repositorystatustest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 import unittest
 from meresco.harvester.repositorystatus import RepositoryStatus
 import tempfile
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/repositorytest.py version_7.1/test/repositorytest.py
--- version_7.0.3/test/repositorytest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/repositorytest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,40 +1,42 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from meresco.harvester.saharaget import SaharaGet, SaharaGetException
 from meresco.harvester.eventlogger import NilEventLogger
 from meresco.harvester.harvesterlog import HarvesterLog
 from meresco.harvester.repository import Repository
-from meresco.harvester.action import Action, DONE, ActionFactory, ActionFactoryException
+from meresco.harvester.action import Action, DONE, ActionException
 from meresco.harvester.oairequest import OAIError
 from slowfoot.wrappers import wrapp
 from slowfoot.binderytools import bind_string
@@ -168,14 +170,12 @@
         self.assertEquals('someaction', self.repo.action)
 
     def _testAction(self, use, action, expectedTypeName):
-        factory = ActionFactory()
         self.repo.use = use
         self.repo.action = action
         createdAction = self.repo._createAction(stateDir=self.logAndStateDir, logDir=self.logAndStateDir, generalHarvestLog=NilEventLogger())
         self.assertEquals(expectedTypeName, createdAction.__class__.__name__)
 
-
-    def testActionFactory(self):
+    def testCreateAction(self):
         self._testAction('', '', 'NoneAction')
         self._testAction('true', '', 'HarvestAction')
         self._testAction('', 'clear', 'DeleteIdsAction')
@@ -185,7 +185,7 @@
         try:
             self._testAction('true', 'nonexisting', 'ignored')
             self.fail()
-        except ActionFactoryException, afe:
+        except ActionException, afe:
             self.assertEquals("Action 'nonexisting' not supported.", str(afe))
 
     def testDoWithoutLogpath(self):
@@ -195,7 +195,7 @@
         self.assertTrue('RepositoryException: Missing stateDir and/or logDir' in message)
         self.assertEquals((message,), generalHarvestLog.calledMethods[-1].args)
         self.assertEquals({'id':self.repo.id}, generalHarvestLog.calledMethods[-1].kwargs)
-        self.assertEquals('error', generalHarvestLog.calledMethods[-1].name)
+        self.assertEquals('logError', generalHarvestLog.calledMethods[-1].name)
 
     # mock saharaget
     def repositoryActionDone(self, domainId, repositoryId):
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/saharagettest.py version_7.1/test/saharagettest.py
--- version_7.0.3/test/saharagettest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/saharagettest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 import unittest
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/smoothactiontest.py version_7.1/test/smoothactiontest.py
--- version_7.0.3/test/smoothactiontest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/smoothactiontest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from actiontestcase import ActionTestCase
 import shutil, os
 from os.path import join
@@ -51,39 +54,44 @@
         self.logDir = self.tempdir
         self.smoothaction = SmoothAction(self.repo, self.stateDir, self.logDir, NilEventLogger())
         self.idfilename = join(self.stateDir, 'rep.ids')
+        self.ignoreidfilename = join(self.stateDir, 'rep_ignored.ids')
         self.old_idfilename = join(self.stateDir, 'rep.ids.old')
         self.statsfilename = join(self.stateDir,'rep.stats')
 
     def testSmooth_Init(self):
         writefile(self.idfilename, 'rep:id:1\nrep:id:2\n')
+        writefile(self.ignoreidfilename, 'rep:id:3\n')
         writefile(self.statsfilename, 'Started: 2005-12-22 16:33:39, Harvested/Uploaded/Deleted/Total: 10/10/0/2, Done: ResumptionToken:\n')
 
-        self.assert_(not os.path.isfile(self.old_idfilename))
+        self.assertFalse(os.path.isfile(self.old_idfilename))
 
         done,message, hasResumptionToken = self.smoothaction.do()
 
-        self.assert_(os.path.isfile(self.old_idfilename))
-        self.assert_(os.path.isfile(self.idfilename))
-        self.assertEquals('rep:id:1\nrep:id:2\n', readfile(self.old_idfilename))
+        self.assertTrue(os.path.isfile(self.old_idfilename))
+        self.assertTrue(os.path.isfile(self.idfilename))
+        self.assertEquals('rep:id:1\nrep:id:2\nrep:id:3\n', readfile(self.old_idfilename))
         self.assertEquals('', readfile(self.idfilename))
-        self.assert_('Done: Deleted all id\'s' in  readfile(self.statsfilename))
+        self.assertTrue('Done: Deleted all id\'s' in  readfile(self.statsfilename))
         self.assertEquals('Smooth reharvest: initialized.', message)
-        self.assert_(not done)
+        self.assertFalse(done)
 
     def testSmooth_InitWithNothingHarvestedYetRepository(self):
-        self.assert_(not os.path.isfile(self.idfilename))
-        self.assert_(not os.path.isfile(self.old_idfilename))
-        self.assert_(not os.path.isfile(self.statsfilename))
+        self.assertFalse(os.path.isfile(self.idfilename))
+        self.assertFalse(os.path.isfile(self.ignoreidfilename))
+        self.assertFalse(os.path.isfile(self.old_idfilename))
+        self.assertFalse(os.path.isfile(self.statsfilename))
 
         done,message, hasResumptionToken = self.smoothaction.do()
 
-        self.assert_(os.path.isfile(self.old_idfilename))
-        self.assert_(os.path.isfile(self.idfilename))
+        self.assertTrue(os.path.isfile(self.old_idfilename))
+        self.assertTrue(os.path.isfile(self.idfilename))
+        self.assertTrue(os.path.isfile(self.ignoreidfilename))
         self.assertEquals('', readfile(self.old_idfilename))
         self.assertEquals('', readfile(self.idfilename))
-        self.assert_('Done: Deleted all id\'s' in  readfile(self.statsfilename))
+        self.assertEquals('', readfile(self.ignoreidfilename))
+        self.assertTrue('Done: Deleted all id\'s' in  readfile(self.statsfilename))
         self.assertEquals('Smooth reharvest: initialized.', message)
-        self.assert_(not done)
+        self.assertFalse(done)
 
 
     def testSmooth_Harvest(self):
@@ -96,7 +104,7 @@
         done,message,hasResumptionToken = self.smoothaction.do()
 
         self.assertEquals('Smooth reharvest: Harvested.', message)
-        self.assert_(not done)
+        self.assertFalse(done)
 
     def testSmooth_HarvestAgain(self):
         writefile(self.old_idfilename, 'rep:id:1\nrep:id:2\n')
@@ -108,7 +116,7 @@
         done, message, hasResumptionToken = self.smoothaction.do()
 
         self.assertEquals('Smooth reharvest: Harvested.', message)
-        self.assert_(not done)
+        self.assertFalse(done)
 
     def testSmooth_NothingToDo(self):
         writefile(self.old_idfilename, 'rep:id:1\nrep:id:2\n')
@@ -121,41 +129,12 @@
         done, message, hasResumptionToken = self.smoothaction.do()
 
         self.assertEquals('Smooth reharvest: ' + DONE, message)
-        self.assert_(done)
+        self.assertTrue(done)
 
     def mockdelete(self, filename):
         self.mockdelete_filename = filename
         self.mockdelete_ids = readIds(filename)
 
-    def testSmooth_Finish(self):
-        writefile(self.old_idfilename, 'rep:id:1\nrep:id:2\n')
-        writefile(self.idfilename, 'rep:id:41\nrep:id:2\n')
-
-        self.smoothaction._delete=self.mockdelete
-        result = self.smoothaction._finish()
-
-        self.assert_(not os.path.isfile(self.old_idfilename))
-        self.assertEquals(DONE, result)
-        self.assertEquals(self.idfilename+'.delete', self.mockdelete_filename)
-        self.assertEquals(Set(['rep:id:1']), self.mockdelete_ids)
-
-    def testSmooth_Delete(self):
-        class MockDelete(object):
-            usedrep, usedStateDir, usedLogDir, filename = None, None, None, None
-            def __init__(self, rep, stateDir, logDir, **kwargs):
-                MockDelete.usedrep = rep
-                MockDelete.usedStateDir = stateDir
-                MockDelete.usedLogDir = logDir
-            def deleteFile(self, filename):
-                MockDelete.filename = filename
-        action.DeleteIds = MockDelete
-        self.smoothaction._delete(self.idfilename+'.delete')
-        self.assertEquals(self.idfilename + '.delete', MockDelete.filename)
-        self.assertEquals(self.repo, MockDelete.usedrep)
-        self.assertEquals(self.stateDir, MockDelete.usedStateDir)
-        self.assertEquals(self.logDir, MockDelete.usedLogDir)
-
-
     def testHarvest(self):
         harvester = CallTrace('harvester')
         self.smoothaction._createHarvester = lambda: harvester
@@ -189,7 +168,7 @@
         h = self.newHarvesterLog()
         self.assertEquals((None, None), (h.from_, h.token))
 
-    def xtestResetState_ToStartAllOver(self):
+    def testResetState_ToStartAllOver(self):
         self.writeLogLine(2010, 3, 3, token='resumptionToken')
         self.writeLogLine(2010, 3, 4, exception='Exception')
         action = self.newSmoothAction()
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/statetest.py version_7.1/test/statetest.py
--- version_7.0.3/test/statetest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/statetest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from meresco.harvester.state import State, getHarvestedUploadedRecords, getResumptionToken, getStartDate
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/testrunner.py version_7.1/test/testrunner.py
--- version_7.0.3/test/testrunner.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/testrunner.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,28 +1,33 @@
 ## begin license ##
-#
-#    "HBO-Kennisbank" is a webportal that provides free access to student theses,
-#    publications and learning objects made available by the Universities of
-#    Applied Sciences in the Netherlands.
-#    Copyright (C) 2010 Stichting Kennisnet http://www.kennisnet.nl
-#    Copyright (C) 2011 SURFfoundation. http://www.surf.nl
-#    Copyright (C) 2010-2011 Seek You Too B.V. (CQ2) http://www.cq2.nl
-#
-#    This file is part of "HBO-Kennisbank"
-#
-#    "HBO-Kennisbank" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "HBO-Kennisbank" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "HBO-Kennisbank"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2010-2011 Seek You Too B.V. (CQ2) http://www.cq2.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 SURFfoundation. http://www.surf.nl
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from sys import stdout, stderr
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/throughputanalysertest.py version_7.1/test/throughputanalysertest.py
--- version_7.0.3/test/throughputanalysertest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/throughputanalysertest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 import unittest
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/timedprocesstest.py version_7.1/test/timedprocesstest.py
--- version_7.0.3/test/timedprocesstest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/timedprocesstest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,33 +1,35 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2010 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from cq2utils import CQ2TestCase
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/timeslottest.py version_7.1/test/timeslottest.py
--- version_7.0.3/test/timeslottest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/timeslottest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 import unittest
 import datetime
 import time
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/toolstest.py version_7.1/test/toolstest.py
--- version_7.0.3/test/toolstest.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/toolstest.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,34 +1,37 @@
 ## begin license ##
-#
-#    "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
-#    a web-control panel.
-#    "Meresco Harvester" is originally called "Sahara" and was developed for
-#    SURFnet by:
-#        Seek You Too B.V. (CQ2) http://www.cq2.nl
-#    Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
-#    Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
-#    Copyright (C) 2007-2009 Seek You Too (CQ2) http://www.cq2.nl
-#    Copyright (C) 2007-2009 Stichting Kennisnet Ict op school.
-#       http://www.kennisnetictopschool.nl
-#    Copyright (C) 2009 Tilburg University http://www.uvt.nl
-#
-#    This file is part of "Meresco Harvester"
-#
-#    "Meresco Harvester" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "Meresco Harvester" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "Meresco Harvester"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2006-2007 SURFnet B.V. http://www.surfnet.nl
+# Copyright (C) 2007-2008 SURF Foundation. http://www.surf.nl
+# Copyright (C) 2007-2009, 2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2007-2009 Stichting Kennisnet Ict op school. http://www.kennisnetictopschool.nl
+# Copyright (C) 2009 Tilburg University http://www.uvt.nl
+# Copyright (C) 2011 Stichting Kennisnet http://www.kennisnet.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 import unittest
 from meresco.harvester.controlpanel import tools
 
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/test/utils.py version_7.1/test/utils.py
--- version_7.0.3/test/utils.py	2011-04-14 16:51:56.000000000 +0200
+++ version_7.1/test/utils.py	2011-06-22 16:03:31.000000000 +0200
@@ -1,29 +1,35 @@
 ## begin license ##
-#
-#    "HBO-Kennisbank" is a webportal that provides free access to student theses,
-#    publications and learning objects made available by the Universities of
-#    Applied Sciences in the Netherlands.
-#    Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
-#    Copyright (C) 2011 SURFfoundation. http://www.surf.nl
-#    Copyright (C) 2010-2011 Seek You Too B.V. (CQ2) http://www.cq2.nl
-#
-#    This file is part of "HBO-Kennisbank"
-#
-#    "HBO-Kennisbank" is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    "HBO-Kennisbank" is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with "HBO-Kennisbank"; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2010-2011 Seek You Too B.V. (CQ2) http://www.cq2.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 SURFfoundation. http://www.surf.nl
+# Copyright (C) 2011 Seek You Too (CQ2) http://www.cq2.nl
+# 
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
+
 from amara.binderytools import bind_string
 from lxml.etree import parse as parse_lxml
 from StringIO import StringIO
diff --unidirectional-new-file --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied --recursive --unified version_7.0.3/testsetup.sh version_7.1/testsetup.sh
--- version_7.0.3/testsetup.sh	1970-01-01 01:00:00.000000000 +0100
+++ version_7.1/testsetup.sh	2011-06-22 16:03:31.000000000 +0200
@@ -0,0 +1,69 @@
+## begin license ##
+# 
+# "Meresco Harvester" consists of two subsystems, namely an OAI-harvester and
+# a web-control panel.
+# "Meresco Harvester" is originally called "Sahara" and was developed for 
+# SURFnet by:
+# Seek You Too B.V. (CQ2) http://www.cq2.nl 
+# 
+# Copyright (C) 2010-2011 Seek You Too (CQ2) http://www.cq2.nl
+# Copyright (C) 2010-2011 Stichting Kennisnet http://www.kennisnet.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Meresco Harvester"
+# 
+# "Meresco Harvester" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Meresco Harvester" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Meresco Harvester"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
+## end license ##
+
+set -e
+mydir=$(cd $(dirname $0); pwd)
+
+rm -rf tmp build
+
+python setup.py install --root tmp
+cp -r test tmp/test
+cp meresco/__init__.py tmp/usr/lib/python2.5/site-packages/meresco
+export PYTHONPATH=`pwd`/tmp/usr/lib/python2.5/site-packages
+find tmp -name '*.py' -exec sed -e \
+    "/DO_NOT_DISTRIBUTE/d;
+    s,^examplesPath.*$,examplesPath='$mydir/examples',;
+    s,^harvesterDir.*$,harvesterDir='$PYTHONPATH',;
+    s,^binDir.*$,binDir='$mydir/tmp/usr/bin'," -i {} \;
+
+teststorun=$1
+if [ -z "$teststorun" ]; then
+    teststorun="alltests.sh integrationtest.sh"
+else
+    shift
+fi
+
+echo "Will now run the tests:"
+for f in $teststorun; do
+    echo "- $f"
+done
+echo "Press [ENTER] to continue"
+read
+
+for testtorun in $teststorun; do
+    (
+    cd tmp/test
+    ./$testtorun "$@"
+    )
+    echo "Finished $testtorun, press [ENTER] to continue"
+    read
+done
+
+rm -rf tmp build
