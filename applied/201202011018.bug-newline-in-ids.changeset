Changeset created on Wed Feb 01 10:18:48 UTC 2012 by Seecr (Seek You Too B.V.)

Description: Fixed bug with newline chars in oai:identifier

    Record ids are written to .ids files using escaping from python-escaping. 
    This is needed because of records are seperated by newlines in these files,
    so newlines in identifiers need to be escaped. 
    Also ids where stripped when reading so the identifier was also modified.
    This is also fixed by only stripping the last newline when reading.

Baseline version: https://meresco.svn.sourceforge.net/svnroot/meresco/meresco-harvester/workingsets/7.3.2-Edurep/version_0

diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/harvester/deleteids.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/meresco/harvester/deleteids.py
--- version_0/meresco/harvester/deleteids.py	2012-01-31 16:49:31.000000000 +0100
+++ version_1/meresco/harvester/deleteids.py	2012-02-01 11:18:47.000000000 +0100
@@ -40,14 +40,17 @@
 import sys, os
 from mapping import Upload
 from traceback import format_exception
+from escaping import escapeFilename,unescapeFilename
 
 from meresco.core import Observable
 
 def readIds(filename):
     ids = []
     uniqueIds = set()
-    for id in (id.strip() for id in open(filename)):
-        if id  in uniqueIds:
+    for id in (unescapeFilename(id) for id in open(filename)):
+        if id[-1] == '\n':
+            id = id[:-1]
+        if id in uniqueIds:
             continue
         ids.append(id)
         uniqueIds.add(id)
@@ -57,7 +60,7 @@
     f = open(filename,'w')
     try:
         for id in ids:
-            f.write(id)
+            f.write(escapeFilename(id))
             f.write('\n')
     finally:
         f.close()
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/harvester/filesystemuploader.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/meresco/harvester/filesystemuploader.py
--- version_0/meresco/harvester/filesystemuploader.py	2012-01-31 16:48:35.000000000 +0100
+++ version_1/meresco/harvester/filesystemuploader.py	2012-02-01 11:18:47.000000000 +0100
@@ -41,6 +41,7 @@
 from StringIO import StringIO
 from lxml.etree import parse, tostring
 from time import gmtime, strftime, time
+from escaping import escapeFilename
 
 OAI_ENVELOPE = """<?xml version="1.0" encoding="UTF-8"?>
 <OAI-PMH 
@@ -119,7 +120,7 @@
             f = open(os.path.join(self._target.path,
                 'deleted_records'),'a')
             try:
-                f.write('%s\n' % anUpload.id)
+                f.write('%s\n' % escapeFilename(anUpload.id))
             finally:
                 f.close()
         else:
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/harvester/ids.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/meresco/harvester/ids.py
--- version_0/meresco/harvester/ids.py	2012-01-31 16:49:31.000000000 +0100
+++ version_1/meresco/harvester/ids.py	2012-02-01 11:18:47.000000000 +0100
@@ -39,6 +39,7 @@
 
 from os import makedirs
 from os.path import isdir, join
+from escaping import escapeFilename, unescapeFilename
 
 def idfilename(stateDir, name):
     isdir(stateDir) or makedirs(stateDir)
@@ -49,7 +50,9 @@
         self._filename = idfilename(stateDir, name)
         self._ids = []
         uniqueIds = set()
-        for id in (id.strip() for id in open(self._filename, 'a+')):
+        for id in (id for id in open(self._filename, 'a+')):
+            if id[-1] == '\n':
+                id = id[:-1]
             if id  in uniqueIds:
                 continue
             self._ids.append(id)
@@ -61,7 +64,7 @@
 
     def __iter__(self):
         for id in self._ids:
-            yield id
+            yield unescapeFilename(id)
 
     def clear(self):
         self._ids = []
@@ -80,6 +83,7 @@
         os.rename(self._filename + '.new', self._filename)
 
     def add(self, uploadid):
+        uploadid = escapeFilename(uploadid)
         if uploadid in self._ids:
             return
         self._ids.append(uploadid)
@@ -87,6 +91,7 @@
         self._idsfile.flush()
 
     def remove(self, uploadid):
+        uploadid = escapeFilename(uploadid)
         if uploadid in self._ids:
             self._ids.remove(uploadid)
             self.close()
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/meresco/harvester/repositorystatus.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/meresco/harvester/repositorystatus.py
--- version_0/meresco/harvester/repositorystatus.py	2012-01-31 16:49:31.000000000 +0100
+++ version_1/meresco/harvester/repositorystatus.py	2012-02-01 11:18:47.000000000 +0100
@@ -35,9 +35,10 @@
 from re import compile
 from itertools import ifilter, islice
 from meresco.core import Observable
-from escaping import escapeFilename
+from escaping import escapeFilename, unescapeFilename
 
 from harvesterlog import INVALID_DATA_MESSAGES_DIR
+from meresco.harvester.deleteids import readIds
 
 
 NUMBERS_RE = compile(r'.*Harvested/Uploaded/Deleted/Total:\s*(\d+)/(\d+)/(\d+)/(\d+).*')
@@ -65,7 +66,11 @@
         invalidFile = join(self._statePath, domainId, escapeFilename("%s_invalid.ids" % repositoryId))
         if not isfile(invalidFile):
             return []
-        return reversed([line.strip() for line in open(invalidFile) if line.strip()])
+        return reversed(
+            [x[:-1] if x[-1] == '\n' else x for x in 
+                (unescapeFilename(line) for line in open(invalidFile) if line.strip())
+            ]
+        )
 
     def getInvalidRecord(self, domainId, repositoryId, recordId):
         invalidDir = join(self._logPath, domainId, INVALID_DATA_MESSAGES_DIR)
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/_alltests.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/test/_alltests.py
--- version_0/test/_alltests.py	2012-01-31 16:49:18.000000000 +0100
+++ version_1/test/_alltests.py	2012-02-01 11:18:47.000000000 +0100
@@ -49,6 +49,7 @@
 
 from amaraforharvestertest import AmaraForHarvesterTest
 from cacherecordtest import CacheRecordTest
+from deleteidstest import DeleteIdsTest
 from disallowfileplugintest import DisallowFilePluginTest
 from eventloggertest import EventLoggerTest
 from filesystemuploadtest import FileSystemUploaderTest
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/deleteidstest.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/test/deleteidstest.py
--- version_0/test/deleteidstest.py	1970-01-01 01:00:00.000000000 +0100
+++ version_1/test/deleteidstest.py	2012-02-01 11:18:47.000000000 +0100
@@ -0,0 +1,17 @@
+from cq2utils import CQ2TestCase
+from meresco.harvester.deleteids import readIds, writeIds
+from os.path import join
+
+class DeleteIdsTest(CQ2TestCase):
+
+    def testReadIds(self):
+        filename = join(self.tempdir, "test.ids")
+        open(filename, 'w').write("uploadId1\n%0A  uploadId2\n   uploadId3")
+
+        self.assertEquals(['uploadId1', '\n  uploadId2', '   uploadId3'], readIds(filename))
+
+    def testWriteIds(self):
+        filename = join(self.tempdir, "test.ids")
+        writeIds(filename, ['uploadId1', '\n  uploadId2', '   uploadId3'])
+        self.assertEquals('uploadId1\n%0A  uploadId2\n   uploadId3\n', open(filename).read())
+
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/idstest.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/test/idstest.py
--- version_0/test/idstest.py	2012-01-31 16:49:31.000000000 +0100
+++ version_1/test/idstest.py	2012-02-01 11:18:47.000000000 +0100
@@ -76,6 +76,28 @@
         self.assertEquals(3, len(self.ids))
         self.ids.close()
         self.assertEquals(3, len(open(self.tempdir + '/three.ids').readlines()))
+
+    def testAddStrangeIds(self):
+        self.ids = Ids(self.tempdir, 'idstest')
+        self.ids.add('id:1')
+        self.ids.add('\n   id:1')
+        self.ids.add('   id:2')
+        self.assertEquals(3, len(open(self.tempdir + '/idstest.ids').readlines()))
+        self.assertEquals(['id:1', '\n   id:1', '   id:2'], list(self.ids))
+
+        self.ids = Ids(self.tempdir, 'idstest')
+        self.assertEquals(['id:1', '\n   id:1', '   id:2'], list(self.ids))
+
+    def testRemoveStrangeId(self):
+        self.ids = Ids(self.tempdir, 'idstest')
+        self.ids.add('id:1')
+        self.ids.add('\n   id:1')
+        self.ids.add('   id:2')
+        self.assertEquals(['id:1', '\n   id:1', '   id:2'], list(self.ids))
+        self.ids.remove('id:1')
+        self.ids.remove('\n   id:1')
+        self.ids.remove('   id:2')
+        self.assertEquals([], list(self.ids))
         
         
     def writeTestIds(self, name, ids):
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/integration/harvestertest.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/test/integration/harvestertest.py
--- version_0/test/integration/harvestertest.py	2012-01-31 16:49:31.000000000 +0100
+++ version_1/test/integration/harvestertest.py	2012-02-01 11:18:47.000000000 +0100
@@ -243,7 +243,7 @@
         self.assertEquals(set([
                 'harvestertest:oai:record:10', 'harvestertest:oai:record:09', 'harvestertest:oai:record:08', 
                 'harvestertest:oai:record:07', 'harvestertest:oai:record:06', 'harvestertest:oai:record:05', 
-                'harvestertest:oai:record:04', 'harvestertest:oai:record:03', 'harvestertest:oai:record:02/&gkn', 
+                'harvestertest:oai:record:04', 'harvestertest:oai:record:03', 'harvestertest:%0A oai:record:02%2F&gkn', 
                 'harvestertest:oai:record:01'
             ]), 
             set([id.strip() for id in open(join(self.filesystemDir, 'deleted_records'))])
@@ -288,7 +288,7 @@
         log.startRepository()
         for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [1,2,120,121]]:
             if uploadId == '%s:oai:record:02' % (REPOSITORY):
-                uploadId = '%s:oai:record:02/&gkn' % (REPOSITORY)
+                uploadId = '%s:\n oai:record:02/&gkn' % (REPOSITORY)
             log.notifyHarvestedRecord(uploadId)
             log.uploadIdentifier(uploadId)
         for uploadId in ['%s:oai:record:%02d' % (REPOSITORY, i) for i in [4,5,122,123,124]]:
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/integration/helperserver.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/test/integration/helperserver.py
--- version_0/test/integration/helperserver.py	2012-01-31 16:49:31.000000000 +0100
+++ version_1/test/integration/helperserver.py	2012-02-01 11:18:47.000000000 +0100
@@ -195,7 +195,7 @@
     server.once.observer_init()
     for i in range(1,16):
         if i == 2:
-            identifier = 'oai:record:02/&gkn'
+            identifier = '\n oai:record:02/&gkn'
         else:
             identifier = 'oai:record:%02d' % i
         oaiStorage.add(identifier=identifier, partname='oai_dc', data='''<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dc="http://purl.org/dc/elements/1.1/" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><dc:identifier>%s</dc:identifier></oai_dc:dc>''' % escapeXml(identifier))
diff --unidirectional-new-file --recursive --unified --exclude='*.so' --exclude='*.o' --exclude=.svn --exclude='*.pyc' --exclude=deps.d --exclude=applied version_0/test/integration/internalservertest.py /vol/extra_disk/development/meresco-harvester/workingsets/7.3.2-Edurep/version_1/test/integration/internalservertest.py
--- version_0/test/integration/internalservertest.py	2012-01-31 16:48:35.000000000 +0100
+++ version_1/test/integration/internalservertest.py	2012-02-01 11:18:47.000000000 +0100
@@ -49,15 +49,15 @@
         self.controlHelper(action='allInvalid')
         self.startHarvester(repository=REPOSITORY)
         header, result = getRequest(self.harvesterInternalServerPortNumber, '/invalid', {'domainId': 'adomain', 'repositoryId': 'integrationtest'}, parse='lxml')
-        self.assertEquals(['oai:record:08', 'oai:record:07', 'oai:record:05', 'oai:record:04', 'oai:record:02/&gkn', 'oai:record:01'], result.xpath("/div/table/tr/td[@class='link']/a/text()"))
+        self.assertEquals(['oai:record:08', 'oai:record:07', 'oai:record:05', 'oai:record:04', '\n oai:record:02/&gkn', 'oai:record:01'], result.xpath("/div/table/tr/td[@class='link']/a/text()"))
         self.assertEquals("/page/invalidRecord/?recordId=oai%3Arecord%3A08&domainId=adomain&repositoryId=integrationtest", result.xpath("/div/table/tr/td[@class='link']/a")[0].attrib['href'])
         self.assertEquals("/page/showHarvesterStatus/show?domainId=adomain&repositoryId=integrationtest", result.xpath("/div/p/a/@href")[0])
 
     def testViewInvalidRecord(self):
         self.controlHelper(action='allInvalid')
         self.startHarvester(repository=REPOSITORY)
-        header, result = getRequest(self.harvesterInternalServerPortNumber, '/invalidRecord', {'domainId': 'adomain', 'repositoryId': 'integrationtest', 'recordId': 'oai:record:02/&gkn'}, parse='lxml')
-        self.assertEquals("Repository integrationtest - Record oai:record:02/&gkn", result.xpath("//h3/text()")[0])
+        header, result = getRequest(self.harvesterInternalServerPortNumber, '/invalidRecord', {'domainId': 'adomain', 'repositoryId': 'integrationtest', 'recordId': '\n oai:record:02/&gkn'}, parse='lxml')
+        self.assertEquals("Repository integrationtest - Record \n oai:record:02/&gkn", result.xpath("//h3/text()")[0])
         self.assertEquals("/page/invalid/?domainId=adomain&repositoryId=integrationtest", result.xpath("/div/p/a/@href")[0])
 
     def testGetStatusForDomainAndRepositoryId(self):
